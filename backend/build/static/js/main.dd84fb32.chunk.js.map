{"version":3,"sources":["context/AuthContext.js","api/axios.js","components/ThemedSuspense.js","context/CurrencyContext.js","context/SidebarContext.js","components/AccessibleNavigationAnnouncer.js","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","useState","user","setUser","loading","setLoading","config","setConfig","useEffect","token","localStorage","getItem","get","headers","Authorization","concat","then","data","catch","removeItem","fetchConfig","async","configData","Array","isArray","length","err","console","error","handleConfigUpdate","window","addEventListener","removeEventListener","_jsx","Provider","value","login","userData","setItem","logout","BASE_URL","log","axiosInstance","axios","create","baseURL","interceptors","request","use","Promise","reject","response","_error$response4","_error$response","_error$response2","_error$response3","_error$config","_error$config2","message","status","statusText","url","method","logErrorToConsole","location","href","params","arguments","undefined","_objectSpread","res","post","put","_delete","delete","ThemedSuspense","className","CurrencyContext","useCurrency","context","Error","CurrencyProvider","currency","setCurrency","currencySymbols","fetchCurrency","success","_config$quotation","_config$business","configuration","quotation","business","handleCurrencyUpdate","event","newCurrency","detail","formatCurrency","amount","showSymbol","numAmount","parseFloat","Intl","NumberFormat","style","currencyDisplay","format","toLocaleString","minimumFractionDigits","maximumFractionDigits","symbol","formattedAmount","getCurrencySymbol","updateCurrency","refreshCurrency","SidebarContext","React","SidebarProvider","isSidebarOpen","setIsSidebarOpen","toggleSidebar","closeSidebar","useMemo","AccessibleNavigationAnnouncer","setMessage","useLocation","pathname","slice","setTimeout","role","ProtectedRoute","component","Component","rest","_objectWithoutProperties","_excluded","Route","render","props","Redirect","to","Layout","lazy","Login","Register","CreateAccount","ForgotPassword","AppRoutes","_jsxs","Switch","path","exact","App","Router","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","Suspense","fallback","Windmill","usePreferences","document","getElementById","URL","process","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.dd84fb32.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { get } from '../api/axios'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n  const [user, setUser] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [config, setConfig] = useState(null) \r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      setIsAuthenticated(true)\r\n      get('/auth/me', {}, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }).then(data => {\r\n        setUser(data)\r\n      }).catch(() => {\r\n        localStorage.removeItem('token')\r\n        setIsAuthenticated(false)\r\n      })\r\n    }\r\n\r\n    const fetchConfig = async () => {\r\n      if (token) {\r\n        try {\r\n          const configData = await get('/configuration', {}, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          })\r\n\r\n          if (Array.isArray(configData.data) && configData.data.length > 0) {\r\n            setConfig(configData.data[0])\r\n          }\r\n        } catch (err) {\r\n          console.error('Config fetch failed', err)\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n    fetchConfig()\r\n\r\n    \r\n    const handleConfigUpdate = () => {\r\n      fetchConfig()\r\n    }\r\n\r\n    window.addEventListener('currencyUpdated', handleConfigUpdate)\r\n\r\n    setLoading(false)\r\n\r\n    \r\n    return () => {\r\n      window.removeEventListener('currencyUpdated', handleConfigUpdate)\r\n    }\r\n  }, [])\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem('token', token)\r\n    setIsAuthenticated(true)\r\n    setUser(userData)\r\n  }\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token')\r\n    setIsAuthenticated(false)\r\n    setUser(null)\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, user, loading, config }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import axios from \"axios\";\r\n\r\nlet BASE_URL;\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n  console.log(\"Running in Production Mode\");\r\n  BASE_URL = \"https://quotationmaker.onrender.com/api\";\r\n} else {\r\n  console.log(\"Running in Development Mode\");\r\n  BASE_URL = \"http://localhost:5000/api\";\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// 🔍 Optional: Error logging for debugging\r\nconst logErrorToConsole = (error) => {\r\n  console.error(\"API Error:\", {\r\n    message: error.message,\r\n    status: error.response?.status,\r\n    statusText: error.response?.statusText,\r\n    data: error.response?.data,\r\n    url: error.config?.url,\r\n    method: error.config?.method,\r\n  });\r\n};\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    logErrorToConsole(error);\r\n\r\n    if (error.response && error.response.status === 401) {\r\n      window.location.href = \"/login\";\r\n    }\r\n\r\n    return Promise.reject(error.response?.data || error);\r\n  }\r\n);\r\n\r\nexport const get = async (url, params = {}, config = {}) => {\r\n  return axiosInstance.get(url, { params, ...config }).then((res) => res.data);\r\n};\r\n\r\nexport const post = async (url, data) => {\r\n  return axiosInstance.post(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const put = async (url, data) => {\r\n  return axiosInstance.put(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const patch = async (url, data) => {\r\n  return axiosInstance.patch(url, data).then((res) => res.data);\r\n};\r\n\r\nexport const _delete = async (url) => {\r\n  return axiosInstance.delete(url).then((res) => res.data);\r\n};\r\n\r\nexport const postBlob = async (url, data = {}, config = {}) => {\r\n  return axiosInstance.post(url, data, { responseType: \"blob\", ...config });\r\n};\r\n\r\nexport const uploadFile = async (url, formData, config = {}) => {\r\n  return axiosInstance.post(url, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n    ...config\r\n  }).then((res) => res.data);\r\n};\r\n\r\n\r\nexport default axiosInstance;\r\n","import React from 'react'\r\n\r\nfunction ThemedSuspense() {\r\n  return (\r\n    <div className=\"w-full h-screen p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      Loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemedSuspense\r\n","import React, { createContext, useContext, useState, useEffect } from 'react'\r\nimport { get } from '../api/axios'\r\n\r\nconst CurrencyContext = createContext()\r\n\r\nexport const useCurrency = () => {\r\n  const context = useContext(CurrencyContext)\r\n  if (!context) {\r\n    throw new Error('useCurrency must be used within a CurrencyProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport const CurrencyProvider = ({ children }) => {\r\n  const [currency, setCurrency] = useState('USD')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const currencySymbols = {\r\n    'USD': '$',\r\n    'EUR': '€',\r\n    'GBP': '£',\r\n    'PKR': '₨',\r\n    'AED': 'د.إ',\r\n    'CAD': 'C$',\r\n    'AUD': 'A$',\r\n    'JPY': '¥',\r\n    'INR': '₹',\r\n    'CHF': 'Fr',\r\n    'SAR': '﷼'\r\n  }\r\n\r\n  const fetchCurrency = async () => {\r\n  try {\r\n    setLoading(true)\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      setLoading(false)\r\n      return\r\n    }\r\n    \r\n    const response = await get('/configuration', {}, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    })\r\n      if (response.success) {\r\n        const config = response.data.configuration\r\n        const currency = config?.quotation?.currency || config?.business?.currency\r\n        if (currency) {\r\n          setCurrency(currency)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching currency from configuration:', error)\r\n      \r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\nuseEffect(() => {\r\n  fetchCurrency()\r\n\r\n  \r\n  const handleCurrencyUpdate = (event) => {\r\n    const newCurrency = event.detail.currency\r\n    if (newCurrency && newCurrency !== currency) {\r\n      setCurrency(newCurrency) \r\n    }\r\n  }\r\n\r\n  window.addEventListener('currencyUpdated', handleCurrencyUpdate)\r\n\r\n  \r\n  return () => {\r\n    window.removeEventListener('currencyUpdated', handleCurrencyUpdate)\r\n  }\r\n}, []) \r\n\r\n  const formatCurrency = (amount, showSymbol = true) => {\r\n    try {\r\n      const numAmount = parseFloat(amount) || 0\r\n      if (showSymbol) {\r\n        return new Intl.NumberFormat(undefined, {\r\n          style: \"currency\",\r\n          currency: currency,\r\n          currencyDisplay: \"symbol\",\r\n        }).format(numAmount)\r\n      } else {\r\n        return numAmount.toLocaleString(undefined, {\r\n          minimumFractionDigits: 2,\r\n          maximumFractionDigits: 2\r\n        })\r\n      }\r\n    } catch (err) {\r\n      const symbol = currencySymbols[currency] || currency\r\n      const formattedAmount = (parseFloat(amount) || 0).toLocaleString(undefined, {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2\r\n      })\r\n      return showSymbol ? `${symbol} ${formattedAmount}` : formattedAmount\r\n    }\r\n  }\r\n\r\n  const getCurrencySymbol = () => {\r\n    return currencySymbols[currency] || currency\r\n  }\r\n\r\n  const updateCurrency = (newCurrency) => {\r\n    setCurrency(newCurrency)\r\n  }\r\n\r\n  const refreshCurrency = () => {\r\n    fetchCurrency()\r\n  }\r\n\r\n  const value = {\r\n    currency,\r\n    loading,\r\n    formatCurrency,\r\n    getCurrencySymbol,\r\n    updateCurrency,\r\n    refreshCurrency,\r\n    currencySymbols\r\n  }\r\n\r\n  return (\r\n    <CurrencyContext.Provider value={value}>\r\n      {children}\r\n    </CurrencyContext.Provider>\r\n  )\r\n}\r\n\r\nexport default CurrencyContext","import React, { useState, useMemo } from 'react'\r\n\r\nexport const SidebarContext = React.createContext()\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false)\r\n\r\n  function toggleSidebar() {\r\n    setIsSidebarOpen(!isSidebarOpen)\r\n  }\r\n\r\n  function closeSidebar() {\r\n    setIsSidebarOpen(false)\r\n  }\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      isSidebarOpen,\r\n      toggleSidebar,\r\n      closeSidebar,\r\n    }),\r\n    [isSidebarOpen]\r\n  )\r\n\r\n  return <SidebarContext.Provider value={value}>{children}</SidebarContext.Provider>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState('')\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport ThemedSuspense from './ThemedSuspense'\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useAuth()\r\n\r\n  if (loading) {\r\n    return <ThemedSuspense />\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n          \r\n        )\r\n        \r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute","import React, { lazy } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport AccessibleNavigationAnnouncer from './components/AccessibleNavigationAnnouncer'\r\nimport { AuthProvider } from './context/AuthContext'\r\nimport ProtectedRoute from './components/ProtectedRoute'\r\nimport { useAuth } from './context/AuthContext'\r\nimport { CurrencyProvider } from './context/CurrencyContext'\r\n\r\nconst Layout = lazy(() => import('./containers/Layout'))\r\nconst Login = lazy(() => import('./pages/Login'))\r\nconst Register = lazy(() => import('./pages/Register'))\r\nconst CreateAccount = lazy(() => import('./pages/CreateAccount'))\r\nconst ForgotPassword = lazy(() => import('./pages/ForgotPassword'))\r\n\r\nfunction AppRoutes() {\r\n  const { isAuthenticated, loading } = useAuth()\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n      <Route path=\"/create-account\" component={CreateAccount} />\r\n      <Route path=\"/forgot-password\" component={ForgotPassword} />\r\n\r\n      <ProtectedRoute path=\"/app\" component={Layout} />\r\n\r\n      {/* Conditional redirect based on auth status */}\r\n      <Route exact path=\"/\">\r\n        {isAuthenticated ? <Redirect to=\"/app\" /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <CurrencyProvider>\r\n        <Router>\r\n          <AccessibleNavigationAnnouncer />\r\n          <AppRoutes />\r\n        </Router>\r\n      </CurrencyProvider>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Suspense } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/css/tailwind.output.css'\r\nimport App from './App'\r\nimport { SidebarProvider } from './context/SidebarContext'\r\nimport ThemedSuspense from './components/ThemedSuspense'\r\nimport { Windmill } from '@windmill/react-ui'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n//   const axe = require('react-axe')\r\n//   axe(React, ReactDOM, 1000)\r\n// }\r\n\r\nReactDOM.render(\r\n  <SidebarProvider>\r\n    <Suspense fallback={<ThemedSuspense />}>\r\n      <Windmill usePreferences>\r\n        <App />\r\n      </Windmill>\r\n    </Suspense>\r\n  </SidebarProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}