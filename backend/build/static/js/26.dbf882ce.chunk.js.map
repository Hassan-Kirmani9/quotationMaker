{"version":3,"sources":["pages/Quotations/Quotations.js","components/Typography/PageTitle.js"],"names":["Quotations","history","useHistory","pageTable","setPageTable","useState","dataTable","setDataTable","loading","setLoading","error","setError","totalResults","setTotalResults","totalPages","setTotalPages","searchTerm","setSearchTerm","fetchQuotations","async","page","arguments","length","undefined","search","params","URLSearchParams","toString","limit","append","response","get","concat","success","data","quotations","pagination","total","pages","message","_error$response","_error$response$data","console","handleDelete","id","quotationNo","window","confirm","_delete","alert","_error$response2","_error$response2$data","onPageChange","p","getStatusBadgeType","status","getStatusColor","formatCurrency","amount","currency","USD","EUR","GBP","AED","PKR","CAD","AUD","JPY","INR","SAR","toLocaleString","useEffect","_jsx","className","children","_jsxs","Button","onClick","style","backgroundColor","_Fragment","PageTitle","push","Input","placeholder","value","onChange","e","target","timeoutId","setTimeout","clearTimeout","layout","TableContainer","Table","TableHeader","TableCell","TableBody","map","quotation","_quotation$client","_quotation$client2","TableRow","Badge","type","charAt","toUpperCase","slice","title","client","name","businessName","Date","date","toLocaleDateString","validUntil","totalAmount","size","_id","IoEye","disabled","IoPencil","IoTrash","TableFooter","Pagination","resultsPerPage","label","_quotation$client3","_quotation$client4","IoPerson","IoBusinessOutline","IoCalendarOutline","year","month","day","_ref"],"mappings":"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","file":"static/js/26.dbf882ce.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get, _delete, put } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableFooter,\r\n    TableContainer,\r\n    Badge,\r\n    Button,\r\n    Pagination,\r\n    Input\r\n} from '@windmill/react-ui'\r\nimport {\r\n    IoPencil,\r\n    IoTrash,\r\n    IoEye,\r\n    IoCopy,\r\n    IoPerson,\r\n    IoBusinessOutline,\r\n    IoCalendarOutline\r\n} from 'react-icons/io5'\r\n\r\nfunction Quotations() {\r\n    const history = useHistory()\r\n\r\n    const [pageTable, setPageTable] = useState(1)\r\n    const [dataTable, setDataTable] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    \r\n    const resultsPerPage = 10\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    \r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const fetchQuotations = async (page = 1, search = '') => {\r\n        try {\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            \r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                limit: resultsPerPage.toString()\r\n            })\r\n\r\n            if (search) {\r\n                params.append('search', search)\r\n            }\r\n\r\n            const response = await get(`/quotations?${params.toString()}`)\r\n\r\n            if (response.success) {\r\n                setDataTable(response.data.quotations)\r\n                setTotalResults(response.data.pagination.total)\r\n                setTotalPages(response.data.pagination.pages)\r\n            } else {\r\n                setError(response.message || 'Failed to fetch quotations')\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Failed to fetch quotations')\r\n            console.error('Error fetching quotations:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    const handleSearch = (e) => {\r\n        const value = e.target.value\r\n        setSearchTerm(value)\r\n        setPageTable(1) \r\n\r\n        \r\n        const timeoutId = setTimeout(() => {\r\n            fetchQuotations(1, value)\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timeoutId)\r\n    }\r\n\r\n    const handleDelete = async (id, quotationNo) => {\r\n        if (window.confirm(`Are you sure you want to delete quotation ${quotationNo}? This action cannot be undone.`)) {\r\n            try {\r\n                const response = await _delete(`/quotations/${id}`)\r\n\r\n                if (response.success) {\r\n                    fetchQuotations(pageTable, searchTerm)\r\n                    alert('Quotation deleted successfully')\r\n                } else {\r\n                    alert(response.message || 'Failed to delete quotation')\r\n                }\r\n            } catch (error) {\r\n                alert(error.response?.data?.message || error.message || 'Failed to delete quotation')\r\n                console.error('Error deleting quotation:', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    function onPageChange(p) {\r\n        setPageTable(p)\r\n        fetchQuotations(p, searchTerm)\r\n    }\r\n\r\n    const getStatusBadgeType = (status) => {\r\n        switch (status) {\r\n            case 'accepted': return 'success'\r\n            case 'sent': return 'primary'\r\n            case 'viewed': return 'warning'\r\n            case 'draft': return 'neutral'\r\n            case 'rejected': return 'danger'\r\n            case 'expired': return 'danger'\r\n            default: return 'neutral'\r\n        }\r\n    }\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'accepted': \r\n            case 'approved': \r\n                return 'bg-green-500'\r\n            case 'sent': return 'bg-blue-500'\r\n            case 'viewed': return 'bg-yellow-500'\r\n            case 'draft': return 'bg-gray-500'\r\n            case 'rejected': return 'bg-red-500'\r\n            case 'expired': return 'bg-red-500'\r\n            default: return 'bg-gray-500'\r\n        }\r\n    }\r\n\r\n    const formatCurrency = (amount, currency = 'USD') => {\r\n        const symbols = {\r\n            USD: '$', EUR: '€', GBP: '£', AED: 'AED', PKR: '₨',\r\n            CAD: 'C$', AUD: 'A$', JPY: '¥', INR: '₹', SAR: 'SR'\r\n        }\r\n        return `${symbols[currency] || currency} ${amount.toLocaleString()}`\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchQuotations(1, '')\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading quotations...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">{error}</div>\r\n                    <Button\r\n                        onClick={() => fetchQuotations(1, '')}\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <PageTitle>Quotations</PageTitle>\r\n                <Button\r\n                    style={{ backgroundColor: \"#AA1A21\" }}\r\n                    className=\"text-white\"\r\n                    onClick={() => history.push('/app/quotations/create')}\r\n                >\r\n                    Create Quotation\r\n                </Button>\r\n            </div>\r\n\r\n            {}\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Search quotations by number, title, or description...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className=\"w-full md:w-1/3\"\r\n                />\r\n            </div>\r\n\r\n            {dataTable.length === 0 && !searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No quotations found</p>\r\n                    <Button\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                        onClick={() => history.push('/app/quotations/create')}\r\n                    >\r\n                        Create Your First Quotation\r\n                    </Button>\r\n                </div>\r\n            ) : dataTable.length === 0 && searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No quotations found for \"{searchTerm}\"</p>\r\n                    <Button\r\n                        layout=\"outline\"\r\n                        onClick={() => {\r\n                            setSearchTerm('')\r\n                            fetchQuotations(1, '')\r\n                        }}\r\n                    >\r\n                        Clear Search\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {}\r\n                    <div className=\"hidden md:block\">\r\n                        <TableContainer className=\"mb-8\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <tr>\r\n                                        <TableCell>Status</TableCell>\r\n                                        <TableCell>Quotation No</TableCell>\r\n                                        <TableCell>Title</TableCell>\r\n                                        <TableCell>Client</TableCell>\r\n                                        <TableCell>Date</TableCell>\r\n                                        <TableCell>Valid Until</TableCell>\r\n                                        <TableCell>Total Amount</TableCell>\r\n                                        <TableCell>Actions</TableCell>\r\n                                    </tr>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {dataTable.map((quotation) => (\r\n                                        <TableRow key={quotation._id}>\r\n                                            <TableCell>\r\n                                                <Badge type={getStatusBadgeType(quotation.status)}>\r\n                                                    {quotation.status.charAt(0).toUpperCase() + quotation.status.slice(1)}\r\n                                                </Badge>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"font-semibold\">{quotation.quotationNo}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{quotation.title}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"text-sm\">\r\n                                                    <div className=\"font-semibold\">\r\n                                                        {quotation.client?.name || 'N/A'}\r\n                                                    </div>\r\n                                                    <div className=\"text-gray-600\">\r\n                                                        {quotation.client?.businessName || ''}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">\r\n                                                    {new Date(quotation.date).toLocaleDateString()}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className={`text-sm ${new Date(quotation.validUntil) < new Date() ? 'text-red-600' : ''}`}>\r\n                                                    {new Date(quotation.validUntil).toLocaleDateString()}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm font-semibold\">\r\n                                                    {formatCurrency(quotation.totalAmount, quotation.currency || 'USD')}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center space-x-2\">\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"View\"\r\n                                                        onClick={() => history.push(`/app/quotations/view/${quotation._id}`)}\r\n                                                    >\r\n                                                        <IoEye className=\"w-4 h-4\" />\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Edit\"\r\n                                                        onClick={() => history.push(`/app/quotations/edit/${quotation._id}`)}\r\n                                                        disabled={quotation.status === 'accepted' || quotation.status === 'expired'}\r\n                                                    >\r\n                                                        <IoPencil className=\"w-4 h-4\" />\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Delete\"\r\n                                                        onClick={() => handleDelete(quotation._id, quotation.quotationNo)}\r\n                                                        disabled={quotation.status === 'accepted'}\r\n                                                    >\r\n                                                        <IoTrash className=\"w-4 h-4\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            {totalPages > 1 && (\r\n                                <TableFooter>\r\n                                    <Pagination\r\n                                        totalResults={totalResults}\r\n                                        resultsPerPage={resultsPerPage}\r\n                                        onChange={onPageChange}\r\n                                        label=\"Table navigation\"\r\n                                    />\r\n                                </TableFooter>\r\n                            )}\r\n                        </TableContainer>\r\n                    </div>\r\n\r\n                    {}\r\n                    <div className=\"block md:hidden\">\r\n                        <div className=\"space-y-4 mb-8\">\r\n                            {dataTable.map((quotation) => (\r\n                                <div\r\n                                    key={quotation._id}\r\n                                    className=\"bg-gradient-to-br from-green-50 to-green-100 rounded-xl p-4 shadow-sm border border-green-200 relative\"\r\n                                >\r\n                                    {}\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <div className={`${getStatusColor(quotation.status)} text-white text-xs font-semibold px-3 py-1 rounded-full uppercase tracking-wide`}>\r\n                                            {quotation.status === 'accepted' ? 'APPROVED' : quotation.status.toUpperCase()}\r\n                                        </div>\r\n                                        <div className=\"text-gray-600 font-medium text-sm\">\r\n                                            {quotation.quotationNo}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <h3 className=\"text-gray-800 font-semibold text-lg mb-4 leading-tight\">\r\n                                        {quotation.title}\r\n                                    </h3>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-2 text-gray-600\">\r\n                                        <IoPerson className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className=\"text-sm font-medium\">\r\n                                            {quotation.client?.name || 'N/A'}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {quotation.client?.businessName && (\r\n                                        <div className=\"flex items-center mb-2 text-gray-600\">\r\n                                            <IoBusinessOutline className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                            <span className=\"text-sm\">\r\n                                                {quotation.client.businessName}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-4 text-gray-600\">\r\n                                        <IoCalendarOutline className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className={`text-sm ${new Date(quotation.validUntil) < new Date() ? 'text-red-600' : ''}`}>\r\n                                            Valid until {new Date(quotation.validUntil).toLocaleDateString('en-US', { \r\n                                                year: 'numeric', \r\n                                                month: '2-digit', \r\n                                                day: '2-digit' \r\n                                            })}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"text-3xl font-bold text-green-700 mb-4\">\r\n                                        {formatCurrency(quotation.totalAmount, quotation.currency || 'USD')}\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex justify-end space-x-2\">\r\n                                        <button\r\n                                            onClick={() => history.push(`/app/quotations/view/${quotation._id}`)}\r\n                                            className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                            aria-label=\"View\"\r\n                                        >\r\n                                            <IoEye className=\"w-5 h-5 text-gray-600\" />\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => history.push(`/app/quotations/edit/${quotation._id}`)}\r\n                                            disabled={quotation.status === 'accepted' || quotation.status === 'expired'}\r\n                                            className={`bg-white border border-gray-300 rounded-lg p-2 transition-colors ${\r\n                                                quotation.status === 'accepted' || quotation.status === 'expired' \r\n                                                    ? 'opacity-50 cursor-not-allowed' \r\n                                                    : 'hover:bg-gray-50'\r\n                                            }`}\r\n                                            aria-label=\"Edit\"\r\n                                        >\r\n                                            <IoPencil className=\"w-5 h-5 text-gray-600\" />\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => handleDelete(quotation._id, quotation.quotationNo)}\r\n                                            disabled={quotation.status === 'accepted'}\r\n                                            className={`bg-white border border-gray-300 rounded-lg p-2 transition-colors ${\r\n                                                quotation.status === 'accepted' \r\n                                                    ? 'opacity-50 cursor-not-allowed' \r\n                                                    : 'hover:bg-gray-50'\r\n                                            }`}\r\n                                            aria-label=\"Delete\"\r\n                                        >\r\n                                            <IoTrash className=\"w-5 h-5 text-gray-600\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {}\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex justify-center\">\r\n                                <Pagination\r\n                                    totalResults={totalResults}\r\n                                    resultsPerPage={resultsPerPage}\r\n                                    onChange={onPageChange}\r\n                                    label=\"Table navigation\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quotations","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}