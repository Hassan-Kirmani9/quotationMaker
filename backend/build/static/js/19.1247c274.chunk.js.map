{"version":3,"sources":["pages/Clients/Clients.js","components/Typography/PageTitle.js"],"names":["Clients","history","useHistory","pageTable","setPageTable","useState","dataTable","setDataTable","loading","setLoading","error","setError","totalResults","setTotalResults","totalPages","setTotalPages","isModalOpen","setIsModalOpen","editingClient","setEditingClient","editFormData","setEditFormData","name","businessName","email","address","mobileNo","businessNo","city","country","editLoading","setEditLoading","editErrors","setEditErrors","editApiError","setEditApiError","searchTerm","setSearchTerm","fetchClients","async","page","arguments","length","undefined","search","params","URLSearchParams","toString","limit","append","response","get","concat","success","data","clients","pagination","total","pages","message","_error$response","_error$response$data","console","handleDelete","id","clientName","window","confirm","_delete","alert","_error$response2","_error$response2$data","handleEdit","client","handleEditInputChange","e","value","target","prev","_objectSpread","handleEditSubmit","preventDefault","validateEditForm","newErrors","trim","test","Object","keys","put","_id","closeModal","_error$response3","_error$response3$data","onPageChange","p","useEffect","_jsx","className","children","_jsxs","Button","onClick","style","backgroundColor","_Fragment","PageTitle","push","Input","placeholder","onChange","timeoutId","setTimeout","clearTimeout","layout","TableContainer","Table","TableHeader","TableCell","TableBody","map","TableRow","size","EditIcon","TrashIcon","TableFooter","Pagination","resultsPerPage","label","IoPencil","IoTrash","IoBusinessOutline","IoMail","IoCall","IoLocation","IoGlobe","Modal","isOpen","onClose","ModalHeader","ModalBody","onSubmit","Label","required","valid","HelperText","type","ModalFooter","disabled","block","_ref"],"mappings":"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","file":"static/js/19.1247c274.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get, _delete, put } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableFooter,\r\n    TableContainer,\r\n    Badge,\r\n    Avatar,\r\n    Button,\r\n    Pagination,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label,\r\n    Select,\r\n    HelperText\r\n} from '@windmill/react-ui'\r\nimport { EditIcon, TrashIcon } from '../../icons'\r\nimport {\r\n    IoPerson,\r\n    IoBusinessOutline,\r\n    IoMail,\r\n    IoCall,\r\n    IoLocation,\r\n    IoGlobe,\r\n    IoPencil,\r\n    IoTrash\r\n} from 'react-icons/io5'\r\n\r\nfunction Clients() {\r\n    const history = useHistory()\r\n\r\n    const [pageTable, setPageTable] = useState(1)\r\n    const [dataTable, setDataTable] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    \r\n    const resultsPerPage = 10\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [editingClient, setEditingClient] = useState(null)\r\n    const [editFormData, setEditFormData] = useState({\r\n        name: '',\r\n        businessName: '',\r\n        email: '',\r\n        address: '',\r\n        mobileNo: '',\r\n        businessNo: '',\r\n        city: '',\r\n        country: ''\r\n    })\r\n    const [editLoading, setEditLoading] = useState(false)\r\n    const [editErrors, setEditErrors] = useState({})\r\n    const [editApiError, setEditApiError] = useState('')\r\n\r\n    \r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    \r\n    const fetchClients = async (page = 1, search = '') => {\r\n        try {\r\n            setLoading(true)\r\n            setError('')\r\n            \r\n            \r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                limit: resultsPerPage.toString()\r\n            })\r\n            \r\n            if (search) {\r\n                params.append('search', search)\r\n            }\r\n\r\n            const response = await get(`/clients?${params.toString()}`)\r\n\r\n            if (response.success) {\r\n                setDataTable(response.data.clients)\r\n                setTotalResults(response.data.pagination.total)\r\n                setTotalPages(response.data.pagination.pages)\r\n            } else {\r\n                setError(response.message || 'Failed to fetch clients')\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Failed to fetch clients')\r\n            console.error('Error fetching clients:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    const handleSearch = (e) => {\r\n        const value = e.target.value\r\n        setSearchTerm(value)\r\n        setPageTable(1) \r\n        \r\n        \r\n        const timeoutId = setTimeout(() => {\r\n            fetchClients(1, value)\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timeoutId)\r\n    }\r\n\r\n    const handleDelete = async (id, clientName) => {\r\n        if (window.confirm(`Are you sure you want to delete ${clientName}? This action cannot be undone.`)) {\r\n            try {\r\n                const response = await _delete(`/clients/${id}`)\r\n\r\n                if (response.success) {\r\n                    fetchClients(pageTable, searchTerm) \r\n                    alert('Client deleted successfully')\r\n                } else {\r\n                    alert(response.message || 'Failed to delete client')\r\n                }\r\n            } catch (error) {\r\n                alert(error.response?.data?.message || error.message || 'Failed to delete client')\r\n                console.error('Error deleting client:', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (client) => {\r\n        setEditingClient(client)\r\n        setEditFormData({\r\n            name: client.name,\r\n            businessName: client.businessName,\r\n            email: client.email,\r\n            address: client.address,\r\n            mobileNo: client.mobileNo,\r\n            businessNo: client.businessNo || '',\r\n            city: client.city,\r\n            country: client.country\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const handleEditInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setEditFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n\r\n        if (editErrors[name]) {\r\n            setEditErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }))\r\n        }\r\n\r\n        if (editApiError) {\r\n            setEditApiError('')\r\n        }\r\n    }\r\n\r\n    \r\n    const validateEditForm = () => {\r\n        const newErrors = {}\r\n\r\n        if (!editFormData.name.trim()) {\r\n            newErrors.name = 'Client name is required'\r\n        }\r\n\r\n        if (!editFormData.businessName.trim()) {\r\n            newErrors.businessName = 'Business name is required'\r\n        }\r\n\r\n        if (!editFormData.email.trim()) {\r\n            newErrors.email = 'Email is required'\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(editFormData.email)) {\r\n            newErrors.email = 'Please enter a valid email address'\r\n        }\r\n\r\n        if (!editFormData.address.trim()) {\r\n            newErrors.address = 'Address is required'\r\n        }\r\n\r\n        if (!editFormData.mobileNo.trim()) {\r\n            newErrors.mobileNo = 'Mobile number is required'\r\n        }\r\n\r\n        if (!editFormData.city.trim()) {\r\n            newErrors.city = 'City is required'\r\n        }\r\n\r\n        if (!editFormData.country.trim()) {\r\n            newErrors.country = 'Country is required'\r\n        }\r\n\r\n        setEditErrors(newErrors)\r\n        return Object.keys(newErrors).length === 0\r\n    }\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!validateEditForm()) {\r\n            return\r\n        }\r\n\r\n        setEditLoading(true)\r\n        setEditApiError('')\r\n\r\n        try {\r\n            const response = await put(`/clients/${editingClient._id}`, editFormData)\r\n\r\n            if (response.success) {\r\n                alert('Client updated successfully!')\r\n                closeModal()\r\n                fetchClients(pageTable, searchTerm) \r\n            } else {\r\n                setEditApiError(response.message || 'Failed to update client. Please try again.')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating client:', error)\r\n\r\n            if (error.response?.data?.message) {\r\n                setEditApiError(error.response.data.message)\r\n            } else if (error.message) {\r\n                setEditApiError(error.message)\r\n            } else {\r\n                setEditApiError('Failed to update client. Please check your connection and try again.')\r\n            }\r\n        } finally {\r\n            setEditLoading(false)\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false)\r\n        setEditingClient(null)\r\n        setEditFormData({\r\n            name: '',\r\n            businessName: '',\r\n            email: '',\r\n            address: '',\r\n            mobileNo: '',\r\n            businessNo: '',\r\n            city: '',\r\n            country: ''\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n    }\r\n\r\n    \r\n    function onPageChange(p) {\r\n        setPageTable(p)\r\n        fetchClients(p, searchTerm)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchClients(1, '')\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading clients...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">{error}</div>\r\n                    <Button\r\n                        onClick={() => fetchClients(1, '')}\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <PageTitle>Clients</PageTitle>\r\n                <Button\r\n                    style={{ backgroundColor: \"#AA1A21\" }}\r\n                    className=\"text-white\"\r\n                    onClick={() => history.push('/app/clients/create')}\r\n                >\r\n                    Add Client\r\n                </Button>\r\n            </div>\r\n\r\n            {}\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Search clients by name, business name, email, or city...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className=\"w-full md:w-1/3\"\r\n                />\r\n            </div>\r\n\r\n            {dataTable.length === 0 && !searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No clients found</p>\r\n                    <Button\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                        onClick={() => history.push('/app/clients/create')}\r\n                    >\r\n                        Create Your First Client\r\n                    </Button>\r\n                </div>\r\n            ) : dataTable.length === 0 && searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No clients found for \"{searchTerm}\"</p>\r\n                    <Button\r\n                        layout=\"outline\"\r\n                        onClick={() => {\r\n                            setSearchTerm('')\r\n                            fetchClients(1, '')\r\n                        }}\r\n                    >\r\n                        Clear Search\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {}\r\n                    <div className=\"hidden md:block\">\r\n                        <TableContainer className=\"mb-8\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <tr>\r\n                                        <TableCell>Name</TableCell>\r\n                                        <TableCell>Business Name</TableCell>\r\n                                        <TableCell>Email</TableCell>\r\n                                        <TableCell>Phone</TableCell>\r\n                                        <TableCell>City</TableCell>\r\n                                        <TableCell>Country</TableCell>\r\n                                        <TableCell>Actions</TableCell>\r\n                                    </tr>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {dataTable.map((client) => (\r\n                                        <TableRow key={client._id}>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center text-sm\">\r\n                                                    <div>\r\n                                                        <p className=\"font-semibold\">{client.name}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{client.businessName}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{client.email}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"text-sm\">\r\n                                                    <div>{client.mobileNo}</div>\r\n                                                    {client.businessNo && (\r\n                                                        <div className=\"text-gray-500 text-xs\">Business: {client.businessNo}</div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{client.city}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{client.country}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center space-x-4\">\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Edit\"\r\n                                                        onClick={() => handleEdit(client)}\r\n                                                    >\r\n                                                        <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Delete\"\r\n                                                        onClick={() => handleDelete(client._id, client.name)}\r\n                                                    >\r\n                                                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            {totalPages > 1 && (\r\n                                <TableFooter>\r\n                                    <Pagination\r\n                                        totalResults={totalResults}\r\n                                        resultsPerPage={resultsPerPage}\r\n                                        onChange={onPageChange}\r\n                                        label=\"Table navigation\"\r\n                                    />\r\n                                </TableFooter>\r\n                            )}\r\n                        </TableContainer>\r\n                    </div>\r\n\r\n                    {}\r\n                    <div className=\"block md:hidden\">\r\n                        <div className=\"space-y-4 mb-8\">\r\n                            {dataTable.map((client) => (\r\n                                <div\r\n                                    key={client._id}\r\n                                    className=\"bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl p-4 shadow-sm border border-blue-200 relative\"\r\n                                >\r\n                                    {}\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <h3 className=\"text-gray-800 font-semibold text-lg leading-tight\">\r\n                                            {client.name}\r\n                                        </h3>\r\n                                        <div className=\"flex space-x-2\">\r\n                                            <button\r\n                                                onClick={() => handleEdit(client)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Edit\"\r\n                                            >\r\n                                                <IoPencil className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDelete(client._id, client.name)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Delete\"\r\n                                            >\r\n                                                <IoTrash className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoBusinessOutline className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className=\"text-sm font-medium\">\r\n                                            {client.businessName}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoMail className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className=\"text-sm break-all\">\r\n                                            {client.email}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoCall className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <div className=\"text-sm\">\r\n                                            <div>{client.mobileNo}</div>\r\n                                            {client.businessNo && (\r\n                                                <div className=\"text-gray-500 text-xs mt-1\">\r\n                                                    Business: {client.businessNo}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoLocation className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className=\"text-sm\">\r\n                                            {client.city}, {client.country}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-start text-gray-600\">\r\n                                        <IoGlobe className=\"w-4 h-4 mr-2 flex-shrink-0 mt-0.5\" />\r\n                                        <span className=\"text-sm\">\r\n                                            {client.address}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {}\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex justify-center\">\r\n                                <Pagination\r\n                                    totalResults={totalResults}\r\n                                    resultsPerPage={resultsPerPage}\r\n                                    onChange={onPageChange}\r\n                                    label=\"Table navigation\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {}\r\n            <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n                <ModalHeader>Edit Client</ModalHeader>\r\n                <ModalBody>\r\n                    <form onSubmit={handleEditSubmit}>\r\n                        {editApiError && (\r\n                            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                {editApiError}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <Label>\r\n                                <span>Name *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"name\"\r\n                                    value={editFormData.name}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter client name\"\r\n                                    required\r\n                                    valid={!editErrors.name}\r\n                                />\r\n                                {editErrors.name && (\r\n                                    <HelperText valid={false}>{editErrors.name}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Business Name *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"businessName\"\r\n                                    value={editFormData.businessName}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter business name\"\r\n                                    required\r\n                                    valid={!editErrors.businessName}\r\n                                />\r\n                                {editErrors.businessName && (\r\n                                    <HelperText valid={false}>{editErrors.businessName}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label className=\"md:col-span-2\">\r\n                                <span>Email *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    value={editFormData.email}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter email address\"\r\n                                    required\r\n                                    valid={!editErrors.email}\r\n                                />\r\n                                {editErrors.email && (\r\n                                    <HelperText valid={false}>{editErrors.email}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label className=\"md:col-span-2\">\r\n                                <span>Address *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"address\"\r\n                                    value={editFormData.address}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter complete address\"\r\n                                    required\r\n                                    valid={!editErrors.address}\r\n                                />\r\n                                {editErrors.address && (\r\n                                    <HelperText valid={false}>{editErrors.address}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Mobile No *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"mobileNo\"\r\n                                    value={editFormData.mobileNo}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"+1-555-0123\"\r\n                                    required\r\n                                    valid={!editErrors.mobileNo}\r\n                                />\r\n                                {editErrors.mobileNo && (\r\n                                    <HelperText valid={false}>{editErrors.mobileNo}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Business No</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"businessNo\"\r\n                                    value={editFormData.businessNo}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"+1-555-0124 (Optional)\"\r\n                                    valid={!editErrors.businessNo}\r\n                                />\r\n                                {editErrors.businessNo && (\r\n                                    <HelperText valid={false}>{editErrors.businessNo}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>City *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"city\"\r\n                                    value={editFormData.city}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter city\"\r\n                                    required\r\n                                    valid={!editErrors.city}\r\n                                />\r\n                                {editErrors.city && (\r\n                                    <HelperText valid={false}>{editErrors.city}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Country *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"country\"\r\n                                    value={editFormData.country}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter country\"\r\n                                    required\r\n                                    valid={!editErrors.country}\r\n                                />\r\n                                {editErrors.country && (\r\n                                    <HelperText valid={false}>{editErrors.country}</HelperText>\r\n                                )}\r\n                            </Label>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={closeModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Client'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button\r\n                            block\r\n                            size=\"large\"\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Client'}\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Clients","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}