{"version":3,"sources":["pages/Products/Products.js","components/Typography/PageTitle.js"],"names":["Products","history","useHistory","formatCurrency","currency","useCurrency","pageTable","setPageTable","useState","dataTable","setDataTable","loading","setLoading","error","setError","totalResults","setTotalResults","totalPages","setTotalPages","searchTerm","setSearchTerm","isModalOpen","setIsModalOpen","editingProduct","setEditingProduct","editFormData","setEditFormData","name","description","sellingPrice","purchasePrice","editLoading","setEditLoading","editErrors","setEditErrors","editApiError","setEditApiError","fetchProducts","async","page","arguments","length","undefined","search","params","URLSearchParams","toString","limit","append","response","get","concat","success","data","products","pagination","total","pages","message","_error$response","_error$response$data","console","handleDelete","id","productName","window","confirm","_delete","alert","_error$response2","_error$response2$data","handleEdit","product","handleEditInputChange","e","value","target","prev","_objectSpread","parseFloat","handleEditSubmit","preventDefault","validateEditForm","newErrors","trim","Object","keys","put","_id","closeModal","_error$response3","_error$response3$data","onPageChange","p","useEffect","_jsx","className","children","_jsxs","Button","onClick","style","backgroundColor","_Fragment","PageTitle","push","Input","placeholder","onChange","timeoutId","setTimeout","clearTimeout","layout","TableContainer","Table","TableHeader","TableCell","TableBody","map","TableRow","size","EditIcon","TrashIcon","TableFooter","Pagination","resultsPerPage","label","IoPencil","IoTrash","IoDocument","IoPricetagsOutline","IoPricetag","Modal","isOpen","onClose","ModalHeader","ModalBody","onSubmit","Label","required","valid","HelperText","rows","type","step","min","ModalFooter","disabled","block","_ref"],"mappings":"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","file":"static/js/24.b0f21778.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get, _delete, put } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableFooter,\r\n    TableContainer,\r\n    Button,\r\n    Pagination,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label,\r\n    HelperText\r\n} from '@windmill/react-ui'\r\nimport { EditIcon, TrashIcon } from '../../icons'\r\nimport { useCurrency } from '../../context/CurrencyContext'\r\nimport {\r\n    IoCart,\r\n    IoDocument,\r\n    IoPricetag,\r\n    IoPricetagsOutline,\r\n    IoPencil,\r\n    IoTrash\r\n} from 'react-icons/io5'\r\n\r\nfunction Products() {\r\n    const history = useHistory()\r\n    const { formatCurrency, currency } = useCurrency()\r\n\r\n    const [pageTable, setPageTable] = useState(1)\r\n    const [dataTable, setDataTable] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const resultsPerPage = 10\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [editingProduct, setEditingProduct] = useState(null)\r\n    const [editFormData, setEditFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        sellingPrice: 0,\r\n        purchasePrice: 0\r\n    })\r\n    const [editLoading, setEditLoading] = useState(false)\r\n    const [editErrors, setEditErrors] = useState({})\r\n    const [editApiError, setEditApiError] = useState('')\r\n\r\n\r\n    const fetchProducts = async (page = 1, search = '') => {\r\n        try {\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                limit: resultsPerPage.toString()\r\n            })\r\n\r\n            if (search) params.append('search', search)\r\n\r\n            const response = await get(`/products?${params.toString()}`)\r\n\r\n            if (response.success) {\r\n                setDataTable(response.data.products)\r\n                setTotalResults(response.data.pagination.total)\r\n                setTotalPages(response.data.pagination.pages)\r\n            } else {\r\n                setError(response.message || 'Failed to fetch products')\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Failed to fetch products')\r\n            console.error('Error fetching products:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n\r\n    const handleSearch = (e) => {\r\n        const value = e.target.value\r\n        setSearchTerm(value)\r\n        setPageTable(1)\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            fetchProducts(1, value)\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timeoutId)\r\n    }\r\n\r\n    const handleDelete = async (id, productName) => {\r\n        if (window.confirm(`Are you sure you want to delete ${productName}? This action cannot be undone.`)) {\r\n            try {\r\n                const response = await _delete(`/products/${id}`)\r\n\r\n                if (response.success) {\r\n                    fetchProducts(pageTable, searchTerm)\r\n                    alert('Product deleted successfully')\r\n                } else {\r\n                    alert(response.message || 'Failed to delete product')\r\n                }\r\n            } catch (error) {\r\n                alert(error.response?.data?.message || error.message || 'Failed to delete product')\r\n                console.error('Error deleting product:', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (product) => {\r\n        setEditingProduct(product)\r\n        setEditFormData({\r\n            name: product.name,\r\n            description: product.description || '',\r\n            sellingPrice: product.sellingPrice,\r\n            purchasePrice: product.purchasePrice\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const handleEditInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setEditFormData(prev => ({\r\n            ...prev,\r\n            [name]: name === 'sellingPrice' || name === 'purchasePrice' ? parseFloat(value) || 0 : value\r\n        }))\r\n\r\n        if (editErrors[name]) {\r\n            setEditErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }))\r\n        }\r\n\r\n        if (editApiError) {\r\n            setEditApiError('')\r\n        }\r\n    }\r\n\r\n    const validateEditForm = () => {\r\n        const newErrors = {}\r\n\r\n        if (!editFormData.name.trim()) {\r\n            newErrors.name = 'Product name is required'\r\n        }\r\n\r\n        if (!editFormData.sellingPrice || editFormData.sellingPrice < 0) {\r\n            newErrors.sellingPrice = 'Selling price must be 0 or greater'\r\n        }\r\n\r\n        if (!editFormData.purchasePrice || editFormData.purchasePrice < 0) {\r\n            newErrors.purchasePrice = 'Purchase price must be 0 or greater'\r\n        }\r\n\r\n        setEditErrors(newErrors)\r\n        return Object.keys(newErrors).length === 0\r\n    }\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!validateEditForm()) {\r\n            return\r\n        }\r\n\r\n        setEditLoading(true)\r\n        setEditApiError('')\r\n\r\n        try {\r\n            const response = await put(`/products/${editingProduct._id}`, editFormData)\r\n\r\n            if (response.success) {\r\n                alert('Product updated successfully!')\r\n                closeModal()\r\n                fetchProducts(pageTable, searchTerm)\r\n            } else {\r\n                setEditApiError(response.message || 'Failed to update product. Please try again.')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product:', error)\r\n\r\n            if (error.response?.data?.message) {\r\n                setEditApiError(error.response.data.message)\r\n            } else if (error.message) {\r\n                setEditApiError(error.message)\r\n            } else {\r\n                setEditApiError('Failed to update product. Please check your connection and try again.')\r\n            }\r\n        } finally {\r\n            setEditLoading(false)\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false)\r\n        setEditingProduct(null)\r\n        setEditFormData({\r\n            name: '',\r\n            description: '',\r\n            sellingPrice: 0,\r\n            purchasePrice: 0\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n    }\r\n\r\n    const onPageChange = (p) => {\r\n        setPageTable(p)\r\n        fetchProducts(p, searchTerm)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts(1, '')\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading products...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">{error}</div>\r\n                    <Button\r\n                        onClick={() => fetchProducts(1, '')}\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <PageTitle>Products</PageTitle>\r\n                <Button\r\n                    style={{ backgroundColor: \"#AA1A21\" }}\r\n                    className=\"text-white\"\r\n                    onClick={() => history.push('/app/products/create')}\r\n                >\r\n                    Add Product\r\n                </Button>\r\n            </div>\r\n\r\n            { }\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Search products by name or description...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className=\"w-full md:w-1/3\"\r\n                />\r\n            </div>\r\n\r\n            {dataTable.length === 0 && !searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No products found</p>\r\n                    <Button\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                        onClick={() => history.push('/app/products/create')}\r\n                    >\r\n                        Create Your First Product\r\n                    </Button>\r\n                </div>\r\n            ) : dataTable.length === 0 && searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No products found for \"{searchTerm}\"</p>\r\n                    <Button\r\n                        layout=\"outline\"\r\n                        onClick={() => {\r\n                            setSearchTerm('')\r\n                            fetchProducts(1, '')\r\n                        }}\r\n                    >\r\n                        Clear Search\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    { }\r\n                    <div className=\"hidden md:block\">\r\n                        <TableContainer className=\"mb-8\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <tr>\r\n                                        <TableCell>Product Name</TableCell>\r\n                                        <TableCell>Description</TableCell>\r\n                                        <TableCell>Purchase Price</TableCell>\r\n                                        <TableCell>Selling Price</TableCell>\r\n                                        <TableCell>Actions</TableCell>\r\n                                    </tr>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {dataTable.map((product) => (\r\n                                        <TableRow key={product._id}>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center text-sm\">\r\n                                                    <div>\r\n                                                        <p className=\"font-semibold\">{product.name}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{product.description || 'No description'}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{formatCurrency(product.purchasePrice)}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm font-semibold\">{formatCurrency(product.sellingPrice)}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center space-x-4\">\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Edit\"\r\n                                                        onClick={() => handleEdit(product)}\r\n                                                    >\r\n                                                        <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Delete\"\r\n                                                        onClick={() => handleDelete(product._id, product.name)}\r\n                                                    >\r\n                                                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            {totalPages > 1 && (\r\n                                <TableFooter>\r\n                                    <Pagination\r\n                                        totalResults={totalResults}\r\n                                        resultsPerPage={resultsPerPage}\r\n                                        onChange={onPageChange}\r\n                                        label=\"Table navigation\"\r\n                                    />\r\n                                </TableFooter>\r\n                            )}\r\n                        </TableContainer>\r\n                    </div>\r\n\r\n                    { }\r\n                    <div className=\"block md:hidden\">\r\n                        <div className=\"space-y-4 mb-8\">\r\n                            {dataTable.map((product) => (\r\n                                <div\r\n                                    key={product._id}\r\n                                    className=\"bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl p-4 shadow-sm border border-purple-200 relative\"\r\n                                >\r\n                                    { }\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <h3 className=\"text-gray-800 font-semibold text-lg leading-tight flex-1 pr-4\">\r\n                                            {product.name}\r\n                                        </h3>\r\n                                        <div className=\"flex space-x-2 flex-shrink-0\">\r\n                                            <button\r\n                                                onClick={() => handleEdit(product)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Edit\"\r\n                                            >\r\n                                                <IoPencil className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDelete(product._id, product.name)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Delete\"\r\n                                            >\r\n                                                <IoTrash className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    { }\r\n                                    {product.description && (\r\n                                        <div className=\"flex items-start mb-4 text-gray-600\">\r\n                                            <IoDocument className=\"w-4 h-4 mr-2 flex-shrink-0 mt-0.5\" />\r\n                                            <span className=\"text-sm\">\r\n                                                {product.description}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    { }\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoPricetagsOutline className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <div className=\"text-sm\">\r\n                                            <span className=\"text-gray-500\">Purchase Price: </span>\r\n                                            <span className=\"font-medium\">{formatCurrency(product.purchasePrice)}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    { }\r\n                                    <div className=\"flex items-center\">\r\n                                        <IoPricetag className=\"w-5 h-5 mr-3 text-purple-600\" />\r\n                                        <div>\r\n                                            <div className=\"text-xs text-gray-500 uppercase tracking-wide\">Selling Price</div>\r\n                                            <div className=\"text-2xl font-bold text-purple-700\">\r\n                                                {formatCurrency(product.sellingPrice)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        { }\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex justify-center\">\r\n                                <Pagination\r\n                                    totalResults={totalResults}\r\n                                    resultsPerPage={resultsPerPage}\r\n                                    onChange={onPageChange}\r\n                                    label=\"Table navigation\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            { }\r\n            <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n                <ModalHeader>Edit Product</ModalHeader>\r\n                <ModalBody className=\"max-h-[60vh] sm:max-h-[70vh] overflow-y-auto\">\r\n                    <form onSubmit={handleEditSubmit}>\r\n                        {editApiError && (\r\n                            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                {editApiError}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"grid grid-cols-1 gap-4\">\r\n                            <Label>\r\n                                <span>Product Name *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"name\"\r\n                                    value={editFormData.name}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter product name\"\r\n                                    required\r\n                                    valid={!editErrors.name}\r\n                                />\r\n                                {editErrors.name && (\r\n                                    <HelperText valid={false}>{editErrors.name}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Description</span>\r\n                                <textarea\r\n                                    className=\"mt-1 block w-full pt-2 pl-2 border-2 border-gray-300 rounded-md shadow-sm focus:border-purple-300 focus:ring focus:ring-purple-200 focus:ring-opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white\"\r\n                                    name=\"description\"\r\n                                    value={editFormData.description}\r\n                                    onChange={handleEditInputChange}\r\n                                    rows=\"3\"\r\n                                    placeholder=\"Enter product description\"\r\n                                />\r\n                            </Label>\r\n\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                                <Label>\r\n                                    <span>Purchase Price *</span>\r\n                                    <Input\r\n                                        className=\"mt-1\"\r\n                                        name=\"purchasePrice\"\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        min=\"0\"\r\n                                        value={editFormData.purchasePrice}\r\n                                        onChange={handleEditInputChange}\r\n                                        placeholder=\"0.00\"\r\n                                        required\r\n                                        valid={!editErrors.purchasePrice}\r\n                                    />\r\n                                    {editErrors.purchasePrice && (\r\n                                        <HelperText valid={false}>{editErrors.purchasePrice}</HelperText>\r\n                                    )}\r\n                                </Label>\r\n\r\n                                <Label>\r\n                                    <span>Selling Price *</span>\r\n                                    <Input\r\n                                        className=\"mt-1\"\r\n                                        name=\"sellingPrice\"\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        min=\"0\"\r\n                                        value={editFormData.sellingPrice}\r\n                                        onChange={handleEditInputChange}\r\n                                        placeholder=\"0.00\"\r\n                                        required\r\n                                        valid={!editErrors.sellingPrice}\r\n                                    />\r\n                                    {editErrors.sellingPrice && (\r\n                                        <HelperText valid={false}>{editErrors.sellingPrice}</HelperText>\r\n                                    )}\r\n                                </Label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter className=\"flex-shrink-0\">\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={closeModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Product'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button block size=\"large\" layout=\"outline\" onClick={closeModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button\r\n                            block\r\n                            size=\"large\"\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Product'}\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}