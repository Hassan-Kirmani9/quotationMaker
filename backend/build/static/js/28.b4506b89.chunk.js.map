{"version":3,"sources":["pages/Size/Size.js","components/Typography/PageTitle.js"],"names":["Sizes","pageTable","setPageTable","useState","dataTable","setDataTable","loading","setLoading","error","setError","totalResults","setTotalResults","totalPages","setTotalPages","searchTerm","setSearchTerm","isCreateModalOpen","setIsCreateModalOpen","createFormData","setCreateFormData","name","createLoading","setCreateLoading","createErrors","setCreateErrors","createApiError","setCreateApiError","isEditModalOpen","setIsEditModalOpen","editingSize","setEditingSize","editFormData","setEditFormData","editLoading","setEditLoading","editErrors","setEditErrors","editApiError","setEditApiError","fetchSizes","async","page","arguments","length","undefined","search","params","URLSearchParams","toString","limit","append","response","get","concat","success","data","sizes","pagination","total","pages","message","_error$response","_error$response$data","console","handleDelete","id","sizeName","window","confirm","_delete","alert","_error$response2","_error$response2$data","openCreateModal","closeCreateModal","handleCreateSubmit","e","preventDefault","validateCreateForm","newErrors","trim","Object","keys","cleanedData","post","_error$response3","_error$response3$data","handleEdit","size","closeEditModal","handleEditSubmit","validateEditForm","put","_id","_error$response4","_error$response4$data","onPageChange","p","useEffect","_jsx","className","children","_jsxs","Button","onClick","style","backgroundColor","_Fragment","PageTitle","IoAdd","Input","placeholder","value","onChange","target","timeoutId","setTimeout","clearTimeout","layout","TableContainer","Table","TableHeader","TableCell","TableBody","map","TableRow","Date","createdAt","toLocaleDateString","EditIcon","TrashIcon","TableFooter","Pagination","resultsPerPage","label","IoPencil","IoTrash","IoResize","Modal","isOpen","onClose","ModalHeader","ModalBody","onSubmit","Label","prev","_objectSpread","required","valid","maxLength","HelperText","ModalFooter","disabled","block","_ref"],"mappings":"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","file":"static/js/28.b4506b89.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { get, post, _delete, put } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableFooter,\r\n    TableContainer,\r\n    Button,\r\n    Pagination,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label,\r\n    HelperText\r\n} from '@windmill/react-ui'\r\nimport { EditIcon, TrashIcon } from '../../icons'\r\nimport {\r\n    IoPencil,\r\n    IoTrash,\r\n    IoResize,\r\n    IoAdd\r\n} from 'react-icons/io5'\r\n\r\nfunction Sizes() {\r\n    const [pageTable, setPageTable] = useState(1)\r\n    const [dataTable, setDataTable] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const resultsPerPage = 10\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const [isCreateModalOpen, setIsCreateModalOpen] = useState(false)\r\n    const [createFormData, setCreateFormData] = useState({\r\n        name: ''\r\n    })\r\n    const [createLoading, setCreateLoading] = useState(false)\r\n    const [createErrors, setCreateErrors] = useState({})\r\n    const [createApiError, setCreateApiError] = useState('')\r\n\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false)\r\n    const [editingSize, setEditingSize] = useState(null)\r\n    const [editFormData, setEditFormData] = useState({\r\n        name: ''\r\n    })\r\n    const [editLoading, setEditLoading] = useState(false)\r\n    const [editErrors, setEditErrors] = useState({})\r\n    const [editApiError, setEditApiError] = useState('')\r\n\r\n    const fetchSizes = async (page = 1, search = '') => {\r\n        try {\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                limit: resultsPerPage.toString()\r\n            })\r\n\r\n            if (search) params.append('search', search)\r\n\r\n            const response = await get(`/sizes/?${params.toString()}`)\r\n\r\n            if (response.success) {\r\n                setDataTable(response.data.sizes)\r\n                setTotalResults(response.data.pagination.total)\r\n                setTotalPages(response.data.pagination.pages)\r\n            } else {\r\n                setError(response.message || 'Failed to fetch sizes')\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Failed to fetch sizes')\r\n            console.error('Error fetching sizes:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        const value = e.target.value\r\n        setSearchTerm(value)\r\n        setPageTable(1)\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            fetchSizes(1, value)\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timeoutId)\r\n    }\r\n\r\n    \r\n    const handleDelete = async (id, sizeName) => {\r\n        if (window.confirm(`Are you sure you want to delete \"${sizeName}\"? This action cannot be undone.`)) {\r\n            try {\r\n                const response = await _delete(`/sizes/${id}`)\r\n\r\n                if (response.success) {\r\n                    fetchSizes(pageTable, searchTerm)\r\n                    alert('Size deleted successfully')\r\n                } else {\r\n                    alert(response.message || 'Failed to delete size')\r\n                }\r\n            } catch (error) {\r\n                alert(error.response?.data?.message || error.message || 'Failed to delete size')\r\n                console.error('Error deleting size:', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    const openCreateModal = () => {\r\n        setCreateFormData({ name: '' })\r\n        setCreateErrors({})\r\n        setCreateApiError('')\r\n        setIsCreateModalOpen(true)\r\n    }\r\n\r\n    const closeCreateModal = () => {\r\n        setIsCreateModalOpen(false)\r\n        setCreateFormData({ name: '' })\r\n        setCreateErrors({})\r\n        setCreateApiError('')\r\n    }\r\n\r\n    const handleCreateInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setCreateFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n\r\n        if (createErrors[name]) {\r\n            setCreateErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }))\r\n        }\r\n\r\n        if (createApiError) {\r\n            setCreateApiError('')\r\n        }\r\n    }\r\n\r\n    const validateCreateForm = () => {\r\n        const newErrors = {}\r\n\r\n        if (!createFormData.name.trim()) {\r\n            newErrors.name = 'Size name is required'\r\n        } else if (createFormData.name.length > 50) {\r\n            newErrors.name = 'Size name cannot exceed 50 characters'\r\n        }\r\n\r\n        setCreateErrors(newErrors)\r\n        return Object.keys(newErrors).length === 0\r\n    }\r\n\r\n    const handleCreateSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!validateCreateForm()) {\r\n            return\r\n        }\r\n\r\n        setCreateLoading(true)\r\n        setCreateApiError('')\r\n\r\n        try {\r\n            const cleanedData = {\r\n                name: createFormData.name.trim()\r\n            }\r\n\r\n            const response = await post('/sizes', cleanedData)\r\n\r\n            if (response.success) {\r\n                alert('Size created successfully!')\r\n                closeCreateModal()\r\n                fetchSizes(pageTable, searchTerm)\r\n            } else {\r\n                setCreateApiError(response.message || 'Failed to create size. Please try again.')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error creating size:', error)\r\n\r\n            if (error.response?.data?.message) {\r\n                setCreateApiError(error.response.data.message)\r\n            } else if (error.message) {\r\n                setCreateApiError(error.message)\r\n            } else {\r\n                setCreateApiError('Failed to create size. Please check your connection and try again.')\r\n            }\r\n        } finally {\r\n            setCreateLoading(false)\r\n        }\r\n    }\r\n\r\n    \r\n    const handleEdit = (size) => {\r\n        setEditingSize(size)\r\n        setEditFormData({\r\n            name: size.name\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n        setIsEditModalOpen(true)\r\n    }\r\n\r\n    const closeEditModal = () => {\r\n        setIsEditModalOpen(false)\r\n        setEditingSize(null)\r\n        setEditFormData({ name: '' })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n    }\r\n\r\n    const handleEditInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setEditFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n\r\n        if (editErrors[name]) {\r\n            setEditErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }))\r\n        }\r\n\r\n        if (editApiError) {\r\n            setEditApiError('')\r\n        }\r\n    }\r\n\r\n    const validateEditForm = () => {\r\n        const newErrors = {}\r\n\r\n        if (!editFormData.name.trim()) {\r\n            newErrors.name = 'Size name is required'\r\n        } else if (editFormData.name.length > 50) {\r\n            newErrors.name = 'Size name cannot exceed 50 characters'\r\n        }\r\n\r\n        setEditErrors(newErrors)\r\n        return Object.keys(newErrors).length === 0\r\n    }\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!validateEditForm()) {\r\n            return\r\n        }\r\n\r\n        setEditLoading(true)\r\n        setEditApiError('')\r\n\r\n        try {\r\n            const cleanedData = {\r\n                name: editFormData.name.trim()\r\n            }\r\n\r\n            const response = await put(`/sizes/${editingSize._id}`, cleanedData)\r\n\r\n            if (response.success) {\r\n                alert('Size updated successfully!')\r\n                closeEditModal()\r\n                fetchSizes(pageTable, searchTerm)\r\n            } else {\r\n                setEditApiError(response.message || 'Failed to update size. Please try again.')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating size:', error)\r\n\r\n            if (error.response?.data?.message) {\r\n                setEditApiError(error.response.data.message)\r\n            } else if (error.message) {\r\n                setEditApiError(error.message)\r\n            } else {\r\n                setEditApiError('Failed to update size. Please check your connection and try again.')\r\n            }\r\n        } finally {\r\n            setEditLoading(false)\r\n        }\r\n    }\r\n\r\n    const onPageChange = (p) => {\r\n        setPageTable(p)\r\n        fetchSizes(p, searchTerm)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchSizes(1, '')\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading sizes...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">{error}</div>\r\n                    <Button\r\n                        onClick={() => fetchSizes(1, '')}\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <PageTitle>Sizes</PageTitle>\r\n                <Button\r\n                    style={{ backgroundColor: \"#AA1A21\" }}\r\n                    className=\"text-white\"\r\n                    onClick={openCreateModal}\r\n                >\r\n                    <IoAdd className=\"w-4 h-4 mr-2\" />\r\n                    Add Size\r\n                </Button>\r\n            </div>\r\n\r\n            {}\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Search sizes by name...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className=\"w-full md:w-1/3\"\r\n                />\r\n            </div>\r\n\r\n            {dataTable.length === 0 && !searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No sizes found</p>\r\n                    <Button\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                        onClick={openCreateModal}\r\n                    >\r\n                        <IoAdd className=\"w-4 h-4 mr-2\" />\r\n                        Create Your First Size\r\n                    </Button>\r\n                </div>\r\n            ) : dataTable.length === 0 && searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No sizes found for \"{searchTerm}\"</p>\r\n                    <Button\r\n                        layout=\"outline\"\r\n                        onClick={() => {\r\n                            setSearchTerm('')\r\n                            fetchSizes(1, '')\r\n                        }}\r\n                    >\r\n                        Clear Search\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {}\r\n                    <div className=\"hidden md:block\">\r\n                        <TableContainer className=\"mb-8\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <tr>\r\n                                        <TableCell>Size Name</TableCell>\r\n                                        <TableCell>Created</TableCell>\r\n                                        <TableCell>Actions</TableCell>\r\n                                    </tr>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {dataTable.map((size) => (\r\n                                        <TableRow key={size._id}>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center text-sm\">\r\n                                                    <div>\r\n                                                        <p className=\"font-semibold\">{size.name}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">\r\n                                                    {new Date(size.createdAt).toLocaleDateString()}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center space-x-4\">\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Edit\"\r\n                                                        onClick={() => handleEdit(size)}\r\n                                                    >\r\n                                                        <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Delete\"\r\n                                                        onClick={() => handleDelete(size._id, size.name)}\r\n                                                    >\r\n                                                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            {totalPages > 1 && (\r\n                                <TableFooter>\r\n                                    <Pagination\r\n                                        totalResults={totalResults}\r\n                                        resultsPerPage={resultsPerPage}\r\n                                        onChange={onPageChange}\r\n                                        label=\"Table navigation\"\r\n                                    />\r\n                                </TableFooter>\r\n                            )}\r\n                        </TableContainer>\r\n                    </div>\r\n\r\n                    {}\r\n                    <div className=\"block md:hidden\">\r\n                        <div className=\"space-y-4 mb-8\">\r\n                            {dataTable.map((size) => (\r\n                                <div\r\n                                    key={size._id}\r\n                                    className=\"bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl p-4 shadow-sm border border-purple-200 relative\"\r\n                                >\r\n                                    {}\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <h3 className=\"text-gray-800 font-semibold text-lg leading-tight flex-1 pr-4\">\r\n                                            {size.name}\r\n                                        </h3>\r\n                                        <div className=\"flex space-x-2 flex-shrink-0\">\r\n                                            <button\r\n                                                onClick={() => handleEdit(size)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Edit\"\r\n                                            >\r\n                                                <IoPencil className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDelete(size._id, size.name)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Delete\"\r\n                                            >\r\n                                                <IoTrash className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {}\r\n                                    <div className=\"flex items-center\">\r\n                                        <IoResize className=\"w-4 h-4 mr-2 text-purple-600\" />\r\n                                        <div className=\"text-sm text-gray-600\">\r\n                                            Created: {new Date(size.createdAt).toLocaleDateString()}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {}\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex justify-center\">\r\n                                <Pagination\r\n                                    totalResults={totalResults}\r\n                                    resultsPerPage={resultsPerPage}\r\n                                    onChange={onPageChange}\r\n                                    label=\"Table navigation\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {}\r\n            <Modal isOpen={isCreateModalOpen} onClose={closeCreateModal}>\r\n                <ModalHeader>Create New Size</ModalHeader>\r\n                <ModalBody className=\"max-h-[60vh] sm:max-h-[70vh] overflow-y-auto\">\r\n                    <form onSubmit={handleCreateSubmit}>\r\n                        {createApiError && (\r\n                            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                {createApiError}\r\n                            </div>\r\n                        )}\r\n\r\n                        <Label>\r\n                            <span>Size Name *</span>\r\n                            <Input\r\n                                className=\"mt-1\"\r\n                                name=\"name\"\r\n                                value={createFormData.name}\r\n                                onChange={handleCreateInputChange}\r\n                                required\r\n                                valid={!createErrors.name}\r\n                                maxLength={50}\r\n                            />\r\n                            {createErrors.name && (\r\n                                <HelperText valid={false}>{createErrors.name}</HelperText>\r\n                            )}\r\n                        </Label>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter className=\"flex-shrink-0\">\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={closeCreateModal} disabled={createLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button\r\n                            onClick={handleCreateSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={createLoading}\r\n                        >\r\n                            {createLoading ? 'Creating...' : 'Create Size'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button block size=\"large\" layout=\"outline\" onClick={closeCreateModal} disabled={createLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button\r\n                            block\r\n                            size=\"large\"\r\n                            onClick={handleCreateSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={createLoading}\r\n                        >\r\n                            {createLoading ? 'Creating...' : 'Create Size'}\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n\r\n            {}\r\n            <Modal isOpen={isEditModalOpen} onClose={closeEditModal}>\r\n                <ModalHeader>Edit Size</ModalHeader>\r\n                <ModalBody className=\"max-h-[60vh] sm:max-h-[70vh] overflow-y-auto\">\r\n                    <form onSubmit={handleEditSubmit}>\r\n                        {editApiError && (\r\n                            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                {editApiError}\r\n                            </div>\r\n                        )}\r\n\r\n                        <Label>\r\n                            <span>Size Name *</span>\r\n                            <Input\r\n                                className=\"mt-1\"\r\n                                name=\"name\"\r\n                                value={editFormData.name}\r\n                                onChange={handleEditInputChange}\r\n                                placeholder=\"Enter size name\"\r\n                                required\r\n                                valid={!editErrors.name}\r\n                                maxLength={50}\r\n                            />\r\n                            {editErrors.name && (\r\n                                <HelperText valid={false}>{editErrors.name}</HelperText>\r\n                            )}\r\n                        </Label>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter className=\"flex-shrink-0\">\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={closeEditModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Size'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button block size=\"large\" layout=\"outline\" onClick={closeEditModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button\r\n                            block\r\n                            size=\"large\"\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Size'}\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sizes","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}