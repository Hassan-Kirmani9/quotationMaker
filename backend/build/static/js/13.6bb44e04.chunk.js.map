{"version":3,"sources":["pages/Clients/CreateClients.js","components/Typography/PageTitle.js","components/Typography/SectionTitle.js"],"names":["CreateClients","history","useHistory","formData","setFormData","useState","name","businessName","email","address","mobileNo","businessNo","city","country","loading","setLoading","errors","setErrors","apiError","setApiError","handleInputChange","e","value","target","prev","_objectSpread","handleCancel","push","_jsxs","_Fragment","children","className","_jsx","PageTitle","Button","type","layout","onClick","disabled","SectionTitle","onSubmit","async","preventDefault","validateForm","newErrors","trim","length","test","Object","keys","cleanedData","toLowerCase","undefined","response","post","success","alert","message","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","data","backendErrors","forEach","key","Label","Input","onChange","placeholder","required","valid","maxLength","HelperText","Select","map","style","backgroundColor","_ref"],"mappings":"kMAsWeA,UA9Vf,WACE,MAAMC,EAAUC,eAETC,EAAUC,GAAeC,mBAAS,CACvCC,KAAM,GACNC,aAAc,GACdC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,WAAY,GACZC,KAAM,GACNC,QAAS,MAGJC,EAASC,GAAcV,oBAAS,IAChCW,EAAQC,GAAaZ,mBAAS,CAAC,IAC/Ba,EAAUC,GAAed,mBAAS,IAEnCe,EAAqBC,IACzB,MAAM,KAAEf,EAAI,MAAEgB,GAAUD,EAAEE,OAC1BnB,EAAYoB,GAAIC,wBAAA,GACXD,GAAI,IACP,CAAClB,GAAOgB,KAGNN,EAAOV,IACTW,EAAUO,GAAIC,wBAAA,GACTD,GAAI,IACP,CAAClB,GAAO,MAIRY,GACFC,EAAY,KA4GVO,EAAeA,KACnBzB,EAAQ0B,KAAK,iBAgBf,OACEC,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,OAAKG,UAAU,yCAAwCD,SAAA,CACrDE,cAACC,IAAS,CAAAH,SAAC,mBACXE,cAACE,SAAM,CACLC,KAAK,SACLC,OAAO,UACPC,QAASX,EACTY,SAAUxB,EAAQgB,SACnB,uBAKHF,eAAA,OAAKG,UAAU,gEAA+DD,SAAA,CAC5EE,cAACO,IAAY,CAAAT,SAAC,uBAEdF,eAAA,QAAMY,SA1FSC,UAGnB,GAFApB,EAAEqB,iBAjDiBC,MACnB,MAAMC,EAAY,CAAC,EA4CnB,OA1CKzC,EAASG,KAAKuC,OAER1C,EAASG,KAAKwC,OAAS,MAChCF,EAAUtC,KAAO,qCAFjBsC,EAAUtC,KAAO,0BAKdH,EAASI,aAAasC,OAEhB1C,EAASI,aAAauC,OAAS,MACxCF,EAAUrC,aAAe,8CAFzBqC,EAAUrC,aAAe,4BAKtBJ,EAASK,MAAMqC,OAER,6BAA6BE,KAAK5C,EAASK,SACrDoC,EAAUpC,MAAQ,sCAFlBoC,EAAUpC,MAAQ,4BAKfL,EAASM,QAAQoC,SACpBD,EAAUnC,QAAU,uBAGjBN,EAASO,SAASmC,SACrBD,EAAUlC,SAAW,6BAGnBP,EAASQ,YAA6C,KAA/BR,EAASQ,WAAWkC,QAC7CzC,EAAYoB,GAAIC,wBAAA,GACXD,GAAI,IACPb,WAAY,MAIXR,EAASS,KAAKiC,SACjBD,EAAUhC,KAAO,oBAGdT,EAASU,QAAQgC,SACpBD,EAAU/B,QAAU,uBAGtBI,EAAU2B,GAC+B,IAAlCI,OAAOC,KAAKL,GAAWE,QAMzBH,GAAL,CAIA5B,GAAW,GACXI,EAAY,IAEZ,IACE,MAAM+B,EAAWzB,wBAAA,GACZtB,GAAQ,IACXG,KAAMH,EAASG,KAAKuC,OACpBtC,aAAcJ,EAASI,aAAasC,OACpCrC,MAAOL,EAASK,MAAMqC,OAAOM,cAC7B1C,QAASN,EAASM,QAAQoC,OAC1BnC,SAAUP,EAASO,SAASmC,OAC5BlC,WAAYR,EAASQ,WAAWkC,aAAUO,EAC1CxC,KAAMT,EAASS,KAAKiC,OACpBhC,QAASV,EAASU,QAAQgC,SAGtBQ,QAAiBC,YAAK,WAAYJ,GAEpCG,EAASE,SACXC,MAAM,gCACNvD,EAAQ0B,KAAK,iBAEbR,EAAYkC,EAASI,SAAW,6CAEpC,CAAE,MAAOC,GAAQ,IAADC,EAAAC,EAAAC,EAAAC,EAGd,GAFAC,QAAQL,MAAM,yBAA0BA,GAEtB,QAAlBC,EAAID,EAAML,gBAAQ,IAAAM,GAAM,QAANC,EAAdD,EAAgBK,YAAI,IAAAJ,GAApBA,EAAsBH,QACxBtC,EAAYuC,EAAML,SAASW,KAAKP,cAC3B,GAAkB,QAAlBI,EAAIH,EAAML,gBAAQ,IAAAQ,GAAM,QAANC,EAAdD,EAAgBG,YAAI,IAAAF,GAApBA,EAAsBJ,OAC/B,GAAyC,kBAA9BA,EAAML,SAASW,KAAKN,MAC7BvC,EAAYuC,EAAML,SAASW,KAAKN,YAC3B,GAAIA,EAAML,SAASW,KAAKN,MAAM1C,OAAQ,CAC3C,MAAMiD,EAAgB,CAAC,EACvBjB,OAAOC,KAAKS,EAAML,SAASW,KAAKN,MAAM1C,QAAQkD,QAAQC,IACpDF,EAAcE,GAAOT,EAAML,SAASW,KAAKN,MAAM1C,OAAOmD,GAAKV,UAE7DxC,EAAUgD,EACZ,OACSP,EAAMD,QACftC,EAAYuC,EAAMD,SAElBtC,EAAY,uEAEhB,CAAC,QACCJ,GAAW,EACb,CAhDA,GAqFiCe,SAAA,CAC1BZ,GACCc,cAAA,OAAKD,UAAU,iEAAgED,SAC5EZ,IAILU,eAAA,OAAKG,UAAU,wCAAuCD,SAAA,CACpDF,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,kBACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,OACLgB,MAAOnB,EAASG,KAChBgE,SAAUlD,EACVmD,YAAY,2BACZC,UAAQ,EACRC,OAAQzD,EAAOV,KACfoE,UAAW,MAEZ1D,EAAOV,MACN0B,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOV,UAItCsB,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,oBACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,eACLgB,MAAOnB,EAASI,aAChB+D,SAAUlD,EACVmD,YAAY,8BACZC,UAAQ,EACRC,OAAQzD,EAAOT,aACfmE,UAAW,MAEZ1D,EAAOT,cACNyB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOT,kBAItCqB,eAACwC,QAAK,CAACrC,UAAU,gBAAeD,SAAA,CAC9BE,cAAA,QAAAF,SAAM,oBACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,QACL6B,KAAK,QACLb,MAAOnB,EAASK,MAChB8D,SAAUlD,EACVmD,YAAY,sBACZC,UAAQ,EACRC,OAAQzD,EAAOR,QAEhBQ,EAAOR,OACNwB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOR,WAItCoB,eAACwC,QAAK,CAACrC,UAAU,gBAAeD,SAAA,CAC9BE,cAAA,QAAAF,SAAM,cACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,UACLgB,MAAOnB,EAASM,QAChB6D,SAAUlD,EACVmD,YAAY,kCACZC,UAAQ,EACRC,OAAQzD,EAAOP,UAEhBO,EAAOP,SACNuB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOP,aAItCmB,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,oBACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,WACLgB,MAAOnB,EAASO,SAChB4D,SAAUlD,EACVmD,YAAY,kBACZC,UAAQ,EACRC,OAAQzD,EAAON,WAEhBM,EAAON,UACNsB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAON,cAItCkB,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,oBACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,aACLgB,MAAOnB,EAASQ,WAChB2D,SAAUlD,EACVmD,YAAY,6BACZE,OAAQzD,EAAOL,aAEhBK,EAAOL,YACNqB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOL,aAEpCqB,cAAC2C,aAAU,CAAA7C,SAAC,gDAGdF,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,WACNE,cAACqC,QAAK,CACJtC,UAAU,OACVzB,KAAK,OACLgB,MAAOnB,EAASS,KAChB0D,SAAUlD,EACVmD,YAAY,aACZC,UAAQ,EACRC,OAAQzD,EAAOJ,OAEhBI,EAAOJ,MACNoB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOJ,UAItCgB,eAACwC,QAAK,CAAAtC,SAAA,CACJE,cAAA,QAAAF,SAAM,cACNF,eAACgD,SAAM,CACL7C,UAAU,OACVzB,KAAK,UACLgB,MAAOnB,EAASU,QAChByD,SAAUlD,EACVoD,UAAQ,EACRC,OAAQzD,EAAOH,QAAQiB,SAAA,CAEvBE,cAAA,UAAQV,MAAM,GAAEQ,SAAC,qBAnKP,CACtB,gBACA,SACA,iBACA,YACA,UACA,SACA,QACA,WACA,aACA,SA0J6B+C,IAAIhE,GACnBmB,cAAA,UAAsBV,MAAOT,EAAQiB,SAAEjB,GAA1BA,OAGK,UAArBV,EAASU,SACRmB,cAACqC,QAAK,CACJtC,UAAU,OACVwC,YAAY,yBACZD,SAAWjD,GAAMjB,EAAYoB,GAAIC,wBAAA,GAAUD,GAAI,IAAEX,QAASQ,EAAEE,OAAOD,WAGtEN,EAAOH,SACNmB,cAAC2C,aAAU,CAACF,OAAO,EAAM3C,SAAEd,EAAOH,gBAKxCe,eAAA,OAAKG,UAAU,kCAAiCD,SAAA,CAC9CE,cAACE,SAAM,CACLC,KAAK,SACLC,OAAO,UACPC,QAASX,EACTY,SAAUxB,EAAQgB,SACnB,WAGDE,cAACE,SAAM,CACLC,KAAK,SACL2C,MAAO,CAACC,gBAAgB,WACxBhD,UAAU,aACVO,SAAUxB,EAAQgB,SAEjBhB,EAAU,cAAgB,6BAOzC,C,kCCpWA,gBAQemB,IANf,SAAkB+C,GAAgB,IAAf,SAAElD,GAAUkD,EAC7B,OACEhD,cAAA,MAAID,UAAU,+DAA8DD,SAAEA,GAElF,C,kCCNA,gBAMeS,IAJf,SAAqByC,GAAgB,IAAf,SAAElD,GAAUkD,EAChC,OAAOhD,cAAA,MAAID,UAAU,8DAA6DD,SAAEA,GACtF,C","file":"static/js/13.6bb44e04.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { post } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport SectionTitle from '../../components/Typography/SectionTitle'\r\nimport { Input, Label, Button, Select, HelperText } from '@windmill/react-ui'\r\n\r\nfunction CreateClients() {\r\n  const history = useHistory()\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    businessName: '',\r\n    email: '',\r\n    address: '',\r\n    mobileNo: '',\r\n    businessNo: '',\r\n    city: '',\r\n    country: ''\r\n  })\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [errors, setErrors] = useState({})\r\n  const [apiError, setApiError] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n    \r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }))\r\n    }\r\n    \r\n    if (apiError) {\r\n      setApiError('')\r\n    }\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {}\r\n\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Client name is required'\r\n    } else if (formData.name.length > 100) {\r\n      newErrors.name = 'Name cannot exceed 100 characters'\r\n    }\r\n\r\n    if (!formData.businessName.trim()) {\r\n      newErrors.businessName = 'Business name is required'\r\n    } else if (formData.businessName.length > 150) {\r\n      newErrors.businessName = 'Business name cannot exceed 150 characters'\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email address is required'\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n      newErrors.email = 'Please enter a valid email address'\r\n    }\r\n\r\n    if (!formData.address.trim()) {\r\n      newErrors.address = 'Address is required'\r\n    }\r\n\r\n    if (!formData.mobileNo.trim()) {\r\n      newErrors.mobileNo = 'Mobile number is required'\r\n    }\r\n\r\n    if (formData.businessNo && formData.businessNo.trim() === '') {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        businessNo: ''\r\n      }))\r\n    }\r\n\r\n    if (!formData.city.trim()) {\r\n      newErrors.city = 'City is required'\r\n    }\r\n\r\n    if (!formData.country.trim()) {\r\n      newErrors.country = 'Country is required'\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setLoading(true)\r\n    setApiError('')\r\n\r\n    try {\r\n      const cleanedData = {\r\n        ...formData,\r\n        name: formData.name.trim(),\r\n        businessName: formData.businessName.trim(),\r\n        email: formData.email.trim().toLowerCase(),\r\n        address: formData.address.trim(),\r\n        mobileNo: formData.mobileNo.trim(),\r\n        businessNo: formData.businessNo.trim() || undefined,\r\n        city: formData.city.trim(),\r\n        country: formData.country.trim()\r\n      }\r\n\r\n      const response = await post(\"/clients\", cleanedData)\r\n      \r\n      if (response.success) {\r\n        alert('Client created successfully!')\r\n        history.push('/app/clients')\r\n      } else {\r\n        setApiError(response.message || 'Failed to create client. Please try again.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating client:', error)\r\n      \r\n      if (error.response?.data?.message) {\r\n        setApiError(error.response.data.message)\r\n      } else if (error.response?.data?.error) {\r\n        if (typeof error.response.data.error === 'string') {\r\n          setApiError(error.response.data.error)\r\n        } else if (error.response.data.error.errors) {\r\n          const backendErrors = {}\r\n          Object.keys(error.response.data.error.errors).forEach(key => {\r\n            backendErrors[key] = error.response.data.error.errors[key].message\r\n          })\r\n          setErrors(backendErrors)\r\n        }\r\n      } else if (error.message) {\r\n        setApiError(error.message)\r\n      } else {\r\n        setApiError('Failed to create client. Please check your connection and try again.')\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    history.push('/app/clients')\r\n  }\r\n\r\n  const commonCountries = [\r\n    'United States',\r\n    'Canada',\r\n    'United Kingdom',\r\n    'Australia',\r\n    'Germany',\r\n    'France',\r\n    'India',\r\n    'Pakistan',\r\n    'Bangladesh',\r\n    'Other'\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <PageTitle>Add New Client</PageTitle>\r\n        <Button \r\n          type=\"button\"\r\n          layout=\"outline\" \r\n          onClick={handleCancel}\r\n          disabled={loading}\r\n        >\r\n          Back to Clients\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <SectionTitle>Client Information</SectionTitle>\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          {apiError && (\r\n            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n              {apiError}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <Label>\r\n              <span>Client Name *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter client's full name\" \r\n                required\r\n                valid={!errors.name}\r\n                maxLength={100}\r\n              />\r\n              {errors.name && (\r\n                <HelperText valid={false}>{errors.name}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Business Name *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"businessName\"\r\n                value={formData.businessName}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter business/company name\" \r\n                required\r\n                valid={!errors.businessName}\r\n                maxLength={150}\r\n              />\r\n              {errors.businessName && (\r\n                <HelperText valid={false}>{errors.businessName}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Email Address *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                placeholder=\"client@business.com\" \r\n                required\r\n                valid={!errors.email}\r\n              />\r\n              {errors.email && (\r\n                <HelperText valid={false}>{errors.email}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Address *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter complete business address\" \r\n                required\r\n                valid={!errors.address}\r\n              />\r\n              {errors.address && (\r\n                <HelperText valid={false}>{errors.address}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Mobile Number *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"mobileNo\"\r\n                value={formData.mobileNo}\r\n                onChange={handleInputChange}\r\n                placeholder=\"+1-555-123-4567\" \r\n                required\r\n                valid={!errors.mobileNo}\r\n              />\r\n              {errors.mobileNo && (\r\n                <HelperText valid={false}>{errors.mobileNo}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Business Number</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"businessNo\"\r\n                value={formData.businessNo}\r\n                onChange={handleInputChange}\r\n                placeholder=\"+1-555-123-4568 (Optional)\"\r\n                valid={!errors.businessNo}\r\n              />\r\n              {errors.businessNo && (\r\n                <HelperText valid={false}>{errors.businessNo}</HelperText>\r\n              )}\r\n              <HelperText>Optional: Separate business phone number</HelperText>\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>City *</span>\r\n              <Input \r\n                className=\"mt-1\" \r\n                name=\"city\"\r\n                value={formData.city}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter city\" \r\n                required\r\n                valid={!errors.city}\r\n              />\r\n              {errors.city && (\r\n                <HelperText valid={false}>{errors.city}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Country *</span>\r\n              <Select\r\n                className=\"mt-1\"\r\n                name=\"country\"\r\n                value={formData.country}\r\n                onChange={handleInputChange}\r\n                required\r\n                valid={!errors.country}\r\n              >\r\n                <option value=\"\">Select a country</option>\r\n                {commonCountries.map(country => (\r\n                  <option key={country} value={country}>{country}</option>\r\n                ))}\r\n              </Select>\r\n              {formData.country === 'Other' && (\r\n                <Input\r\n                  className=\"mt-2\"\r\n                  placeholder=\"Please specify country\"\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, country: e.target.value }))}\r\n                />\r\n              )}\r\n              {errors.country && (\r\n                <HelperText valid={false}>{errors.country}</HelperText>\r\n              )}\r\n            </Label>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4 mt-6\">\r\n            <Button \r\n              type=\"button\"\r\n              layout=\"outline\" \r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              type=\"submit\"\r\n              style={{backgroundColor:\"#AA1A21\"}}\r\n              className=\"text-white\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Creating...' : 'Create Client'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateClients","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\n\r\nfunction SectionTitle({ children }) {\r\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\r\n}\r\n\r\nexport default SectionTitle\r\n"],"sourceRoot":""}