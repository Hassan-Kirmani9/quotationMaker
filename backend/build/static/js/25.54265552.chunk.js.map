{"version":3,"sources":["pages/Projects/EditProject.js","components/Typography/PageTitle.js"],"names":["EditProject","history","useHistory","id","useParams","formData","setFormData","useState","name","description","client","currency","clients","setClients","setcurrency","errors","setErrors","apiError","setApiError","loading","setLoading","fetching","setFetching","useEffect","fetchClients","fetchcurrency","fetchProject","async","res","get","concat","success","_p$client","_p$currency","p","data","_id","err","console","error","handleChange","e","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","_Fragment","PageTitle","onSubmit","preventDefault","validate","newErrors","trim","Object","keys","length","put","push","message","Label","Input","onChange","valid","HelperText","Textarea","rows","Select","map","c","businessName","Button","layout","onClick","handleCancel","type","style","backgroundColor","disabled","_ref"],"mappings":"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","file":"static/js/25.54265552.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { get, put } from '../../api/axios'\r\nimport {\r\n  Label,\r\n  Input,\r\n  Textarea,\r\n  Select,\r\n  HelperText,\r\n  Button\r\n} from '@windmill/react-ui'\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\n\r\nfunction EditProject() {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams()\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    client: '',\r\n    currency: ''\r\n  })\r\n\r\n  const [clients, setClients] = useState([])\r\n  const [currency, setcurrency] = useState([])\r\n\r\n  const [errors, setErrors] = useState({})\r\n  const [apiError, setApiError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [fetching, setFetching] = useState(true)\r\n\r\n  useEffect(() => {\r\n    fetchClients()\r\n    fetchcurrency()\r\n    fetchProject()\r\n  }, [id])\r\n\r\n  const fetchProject = async () => {\r\n    try {\r\n      const res = await get(`/projects/${id}`)\r\n      if (res.success) {\r\n        const p = res.data\r\n        setFormData({\r\n          name: p.name || '',\r\n          description: p.description || '',\r\n          client: p.client?._id || '',\r\n          currency: p.currency?._id || ''\r\n\r\n        })\r\n      } else {\r\n        setApiError('Project not found')\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      setApiError('Failed to fetch project')\r\n    } finally {\r\n      setFetching(false)\r\n    }\r\n  }\r\n  const handleCancel = () => {\r\n    history.push('/app/clients')\r\n  }\r\n\r\n  const fetchClients = async () => {\r\n    try {\r\n      const res = await get('/clients')\r\n      if (res.success) {\r\n        setClients(res.data)\r\n      } else {\r\n        setClients([])\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching clients:', err)\r\n    }\r\n  }\r\n\r\n  const fetchcurrency = async () => {\r\n    try {\r\n      const res = await get('/currencies')\r\n      if (res.success) {\r\n        setcurrency(res.data)\r\n      } else {\r\n        setcurrency([])\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching currency:', err)\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    const newErrors = {}\r\n    if (!formData.name.trim()) newErrors.name = 'Project name is required'\r\n    if (!formData.description.trim()) newErrors.description = 'Description is required'\r\n    if (!formData.client.trim()) newErrors.client = 'Client is required'\r\n    if (!formData.currency.trim()) newErrors.currency = 'currency is required'\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({ ...prev, [name]: value }))\r\n    if (errors[name]) setErrors(prev => ({ ...prev, [name]: '' }))\r\n    if (apiError) setApiError('')\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (!validate()) return\r\n\r\n    setLoading(true)\r\n    try {\r\n      const res = await put(`/projects/${id}`, formData)\r\n      if (res.success) {\r\n        history.push('/app/projects')\r\n      } else {\r\n        setApiError('Failed to update project')\r\n      }\r\n    } catch (err) {\r\n      setApiError(err.message || 'Something went wrong')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (fetching) return <div className=\"text-center py-20\">Loading project...</div>\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Edit Project</PageTitle>\r\n      {apiError && <div className=\"mb-4 text-red-600\">{apiError}</div>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"grid gap-6 max-w-4xl\">\r\n        <Label>\r\n          <span>Project Name *</span>\r\n          <Input\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            valid={!errors.name}\r\n          />\r\n          {errors.name && <HelperText valid={false}>{errors.name}</HelperText>}\r\n        </Label>\r\n\r\n        <Label>\r\n          <span>Description *</span>\r\n          <Textarea\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={handleChange}\r\n            rows=\"4\"\r\n            valid={!errors.description}\r\n          />\r\n          {errors.description && <HelperText valid={false}>{errors.description}</HelperText>}\r\n        </Label>\r\n\r\n        <Label>\r\n          <span>Client *</span>\r\n          <Select\r\n            name=\"client\"\r\n            value={formData.client}\r\n            onChange={handleChange}\r\n            valid={!errors.client}\r\n          >\r\n            <option value=\"\">Select Client</option>\r\n            {clients.map(c => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name} - {c.businessName}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n          {errors.client && <HelperText valid={false}>{errors.client}</HelperText>}\r\n        </Label>\r\n\r\n        <Label>\r\n          <span>Base Currency *</span>\r\n          <Select\r\n            name=\"currency\"\r\n            value={formData.currency}\r\n            onChange={handleChange}\r\n            valid={!errors.currency}\r\n          >\r\n            <option value=\"\">Select currency</option>\r\n            {currency.map(c => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.currency}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n          {errors.currency && <HelperText valid={false}>{errors.currency}</HelperText>}\r\n        </Label>\r\n\r\n        <div className=\"flex gap-4\">\r\n          <Button layout=\"outline\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            style={{ backgroundColor: '#AA1A21' }}\r\n            className=\"text-white\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Updating...' : 'Update Project'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditProject\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}