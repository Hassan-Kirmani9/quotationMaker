{"version":3,"sources":["pages/Quotations/EditQuotations.js","components/Typography/PageTitle.js","components/Typography/SectionTitle.js"],"names":["EditQuotations","history","useHistory","currency","formatCurrency","getCurrencySymbol","useCurrency","id","useParams","formData","setFormData","useState","client","title","description","discountType","discountValue","taxRate","notes","terms","quotationItems","setQuotationItems","product","quantity","unitPrice","totalPrice","loading","setLoading","fetching","setFetching","errors","setErrors","apiError","setApiError","clientsList","setClientsList","productsList","setProductsList","subtotal","setSubtotal","discountAmount","setDiscountAmount","taxAmount","setTaxAmount","totalAmount","setTotalAmount","useEffect","async","_quotation$client","quotationResponse","clientsResponse","productsResponse","Promise","all","get","concat","success","Error","quotation","data","_id","items","length","map","item","_item$product","clients","products","error","console","message","loadQuotationData","newSubtotal","reduce","sum","parseFloat","newDiscountAmount","afterDiscount","newTaxAmount","handleInputChange","e","name","value","target","prev","_objectSpread","handleItemChange","index","field","selectedProduct","find","p","sellingPrice","_jsx","className","children","_jsxs","_Fragment","PageTitle","onSubmit","preventDefault","validateForm","newErrors","trim","forEach","Object","keys","quotationData","response","put","alert","push","_error$response","_error$response$data","Label","Select","onChange","required","valid","businessName","HelperText","Input","placeholder","Textarea","rows","SectionTitle","type","step","min","toFixed","readOnly","Button","layout","onClick","updatedItems","filter","_","i","removeQuotationItem","disabled","addQuotationItem","max","handleCancel","window","confirm","style","backgroundColor","_ref"],"mappings":"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","file":"static/js/16.49487d5c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { get, put } from '../../api/axios'\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport SectionTitle from '../../components/Typography/SectionTitle'\r\nimport { Input, Label, Button, Select, Textarea, HelperText } from '@windmill/react-ui'\r\nimport { useCurrency } from '../../context/CurrencyContext'\r\n\r\nfunction EditQuotations() {\r\n  const history = useHistory()\r\n  const { currency, formatCurrency, getCurrencySymbol } = useCurrency()\r\n\r\n  const { id } = useParams()\r\n\r\n  const [formData, setFormData] = useState({\r\n    client: '',\r\n    title: '',\r\n    description: '',\r\n    discountType: 'percentage',\r\n    discountValue: 0,\r\n    taxRate: 0,\r\n    currency: '',\r\n    notes: '',\r\n    terms: ''\r\n  })\r\n\r\n  const [quotationItems, setQuotationItems] = useState([\r\n    {\r\n      product: '',\r\n      description: '',\r\n      quantity: 1,\r\n      unitPrice: 0,\r\n      totalPrice: 0\r\n    }\r\n  ])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [fetching, setFetching] = useState(true)\r\n  const [errors, setErrors] = useState({})\r\n  const [apiError, setApiError] = useState('')\r\n  const [clientsList, setClientsList] = useState([])\r\n  const [productsList, setProductsList] = useState([])\r\n\r\n  // Calculated values\r\n  const [subtotal, setSubtotal] = useState(0)\r\n  const [discountAmount, setDiscountAmount] = useState(0)\r\n  const [taxAmount, setTaxAmount] = useState(0)\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n\r\n  // Fetch quotation and dropdown data\r\n  useEffect(() => {\r\n    const loadQuotationData = async () => {\r\n      try {\r\n        setFetching(true)\r\n        setApiError('')\r\n\r\n        const [quotationResponse, clientsResponse, productsResponse] = await Promise.all([\r\n          get(`/quotations/${id}`),\r\n          get(\"/clients\"),\r\n          get(\"/products\")\r\n        ])\r\n\r\n        if (!quotationResponse.success) {\r\n          throw new Error('Quotation not found')\r\n        }\r\n\r\n        const quotation = quotationResponse.data.quotation\r\n\r\n        // Set form data\r\n        setFormData({\r\n          client: quotation.client?._id || '',\r\n          title: quotation.title || '',\r\n          description: quotation.description || '',\r\n          discountType: quotation.discountType || 'percentage',\r\n          discountValue: quotation.discountValue || 0,\r\n          taxRate: quotation.taxRate || 0,\r\n          currency: quotation.currency || '',\r\n          notes: quotation.notes || '',\r\n          terms: quotation.terms || ''\r\n        })\r\n\r\n        // Set quotation items\r\n        if (quotation.items && quotation.items.length > 0) {\r\n          setQuotationItems(quotation.items.map(item => ({\r\n            product: item.product?._id || item.product || '',\r\n            description: item.description || '',\r\n            quantity: item.quantity || 1,\r\n            unitPrice: item.unitPrice || 0,\r\n            totalPrice: item.totalPrice || 0\r\n          })))\r\n        }\r\n\r\n        // Set dropdown data\r\n        if (clientsResponse.success) {\r\n          setClientsList(clientsResponse.data.clients || [])\r\n        }\r\n\r\n        if (productsResponse.success) {\r\n          setProductsList(productsResponse.data.products || [])\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error loading quotation:', error)\r\n        setApiError(error.message || 'Failed to load quotation')\r\n      } finally {\r\n        setFetching(false)\r\n      }\r\n    }\r\n\r\n    if (id) {\r\n      loadQuotationData()\r\n    }\r\n  }, [id])\r\n\r\n  // Calculate totals whenever items or discounts change\r\n  useEffect(() => {\r\n    const newSubtotal = quotationItems.reduce((sum, item) => sum + (parseFloat(item.totalPrice) || 0), 0)\r\n    setSubtotal(newSubtotal)\r\n\r\n    const newDiscountAmount = formData.discountType === 'percentage' \r\n      ? (newSubtotal * formData.discountValue) / 100\r\n      : formData.discountValue\r\n\r\n    setDiscountAmount(newDiscountAmount)\r\n\r\n    const afterDiscount = newSubtotal - newDiscountAmount\r\n    const newTaxAmount = (afterDiscount * formData.taxRate) / 100\r\n    setTaxAmount(newTaxAmount)\r\n\r\n    const newTotalAmount = afterDiscount + newTaxAmount\r\n    setTotalAmount(newTotalAmount)\r\n  }, [quotationItems, formData.discountType, formData.discountValue, formData.taxRate])\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: name === 'discountValue' || name === 'taxRate' ? parseFloat(value) || 0 : value\r\n    }))\r\n\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }))\r\n    }\r\n\r\n    if (apiError) {\r\n      setApiError('')\r\n    }\r\n  }\r\n\r\n  // Handle item changes\r\n  const handleItemChange = (index, field, value) => {\r\n    const items = [...quotationItems]\r\n    items[index][field] = value\r\n\r\n    // If product is selected, auto-fill price and description\r\n    if (field === 'product' && value) {\r\n      const selectedProduct = productsList.find(p => p._id === value)\r\n      if (selectedProduct) {\r\n        items[index].unitPrice = selectedProduct.sellingPrice\r\n        items[index].description = selectedProduct.description\r\n      }\r\n    }\r\n\r\n    // Calculate total price for this item\r\n    if (field === 'quantity' || field === 'unitPrice' || field === 'product') {\r\n      const quantity = parseFloat(items[index].quantity) || 0\r\n      const unitPrice = parseFloat(items[index].unitPrice) || 0\r\n      items[index].totalPrice = quantity * unitPrice\r\n    }\r\n\r\n    setQuotationItems(items)\r\n  }\r\n\r\n  const addQuotationItem = () => {\r\n    setQuotationItems([...quotationItems, {\r\n      product: '',\r\n      description: '',\r\n      quantity: 1,\r\n      unitPrice: 0,\r\n      totalPrice: 0\r\n    }])\r\n  }\r\n\r\n  const removeQuotationItem = (index) => {\r\n    if (quotationItems.length > 1) {\r\n      const updatedItems = quotationItems.filter((_, i) => i !== index)\r\n      setQuotationItems(updatedItems)\r\n    }\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {}\r\n\r\n    if (!formData.client.trim()) {\r\n      newErrors.client = 'Client is required'\r\n    }\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required'\r\n    }\r\n\r\n    // Validate items\r\n    quotationItems.forEach((item, index) => {\r\n      if (!item.product) {\r\n        newErrors[`item_${index}_product`] = 'Product is required'\r\n      }\r\n      if (!item.quantity || parseFloat(item.quantity) <= 0) {\r\n        newErrors[`item_${index}_quantity`] = 'Quantity must be greater than 0'\r\n      }\r\n      if (!item.unitPrice || parseFloat(item.unitPrice) < 0) {\r\n        newErrors[`item_${index}_unitPrice`] = 'Unit price cannot be negative'\r\n      }\r\n    })\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setLoading(true)\r\n    setApiError('')\r\n\r\n    try {\r\n      const quotationData = {\r\n        ...formData,\r\n        items: quotationItems.map(item => ({\r\n          product: item.product,\r\n          description: item.description,\r\n          quantity: parseFloat(item.quantity),\r\n          unitPrice: parseFloat(item.unitPrice)\r\n        }))\r\n      }\r\n\r\n      const response = await put(`/quotations/${id}`, quotationData)\r\n\r\n      if (response.success) {\r\n        alert('Quotation updated successfully!')\r\n        history.push('/app/quotations')\r\n      } else {\r\n        setApiError(response.message || 'Failed to update quotation. Please try again.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating quotation:', error)\r\n\r\n      if (error.response?.data?.message) {\r\n        setApiError(error.response.data.message)\r\n      } else if (error.message) {\r\n        setApiError(error.message)\r\n      } else {\r\n        setApiError('Failed to update quotation. Please check your connection and try again.')\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    if (window.confirm('Are you sure you want to cancel? All changes will be lost.')) {\r\n      history.push('/app/quotations')\r\n    }\r\n  }\r\n\r\n  if (fetching) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading quotation...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <PageTitle>Edit Quotation</PageTitle>\r\n      </div>\r\n\r\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <form onSubmit={handleSubmit}>\r\n          {apiError && (\r\n            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n              {apiError}\r\n            </div>\r\n          )}\r\n\r\n          {/* Basic Info */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Client *</span>\r\n              <Select\r\n                className=\"mt-1\"\r\n                name=\"client\"\r\n                value={formData.client}\r\n                onChange={handleInputChange}\r\n                required\r\n                valid={!errors.client}\r\n              >\r\n                <option value=\"\">Select Client</option>\r\n                {clientsList.map((client) => (\r\n                  <option key={client._id} value={client._id}>\r\n                    {client.name} - {client.businessName}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              {errors.client && <HelperText valid={false}>{errors.client}</HelperText>}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Currency</span>\r\n              <Input\r\n                className=\"mt-1\"\r\n                name=\"currency\"\r\n                value={formData.currency || \"Will use default currency from configuration\"}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Currency\"\r\n              />\r\n              <HelperText>Currency is set in Configuration settings</HelperText>\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Title *</span>\r\n              <Input\r\n                className=\"mt-1\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter quotation title\"\r\n                required\r\n                valid={!errors.title}\r\n              />\r\n              {errors.title && (\r\n                <HelperText valid={false}>{errors.title}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Description</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                placeholder=\"Enter quotation description\"\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Quotation Items */}\r\n          <SectionTitle>Quotation Items</SectionTitle>\r\n          <div className=\"mb-6\">\r\n            {quotationItems.map((item, index) => (\r\n              <div key={index} className=\"grid grid-cols-1 md:grid-cols-6 gap-4 mb-4 p-4 border rounded-lg\">\r\n                <Label className=\"md:col-span-2\">\r\n                  <span>Product *</span>\r\n                  <Select\r\n                    className=\"mt-1\"\r\n                    value={item.product}\r\n                    onChange={(e) => handleItemChange(index, 'product', e.target.value)}\r\n                    required\r\n                    valid={!errors[`item_${index}_product`]}\r\n                  >\r\n                    <option value=\"\">Select Product</option>\r\n                    {productsList.map((product) => (\r\n                      <option key={product._id} value={product._id}>\r\n                        {product.name}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                  {errors[`item_${index}_product`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_product`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Quantity *</span>\r\n                  <Input\r\n                    className=\"mt-1\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    value={item.quantity}\r\n                    onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\r\n                    placeholder=\"1\"\r\n                    required\r\n                    valid={!errors[`item_${index}_quantity`]}\r\n                  />\r\n                  {errors[`item_${index}_quantity`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_quantity`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Unit Price *</span>\r\n                  <Input\r\n                    className=\"mt-1\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    value={item.unitPrice}\r\n                    onChange={(e) => handleItemChange(index, 'unitPrice', e.target.value)}\r\n                    placeholder=\"0.00\"\r\n                    required\r\n                    valid={!errors[`item_${index}_unitPrice`]}\r\n                  />\r\n                  {errors[`item_${index}_unitPrice`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_unitPrice`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Total Price</span>\r\n                  <Input\r\n                    className=\"mt-1\"\r\n                    type=\"number\"\r\n                    value={item.totalPrice.toFixed(2)}\r\n                    readOnly\r\n                  />\r\n                </Label>\r\n\r\n                <div className=\"flex items-end\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    layout=\"outline\"\r\n                    onClick={() => removeQuotationItem(index)}\r\n                    disabled={quotationItems.length === 1}\r\n                    className=\"w-full\"\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <Button\r\n              type=\"button\"\r\n              layout=\"outline\"\r\n              onClick={addQuotationItem}\r\n              className=\"mt-2\"\r\n            >\r\n              Add Item\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Pricing Summary */}\r\n          <SectionTitle>Pricing Details</SectionTitle>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Subtotal</span>\r\n              <Input \r\n                value={subtotal.toFixed(2)} \r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Type</span>\r\n              <Select\r\n                name=\"discountType\"\r\n                value={formData.discountType}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n              >\r\n                <option value=\"percentage\">Percentage</option>\r\n                <option value=\"fixed\">Fixed Amount</option>\r\n              </Select>\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Value</span>\r\n              <Input\r\n                name=\"discountValue\"\r\n                value={formData.discountValue}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                placeholder={formData.discountType === 'percentage' ? '0%' : '0.00'}\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Amount</span>\r\n              <Input \r\n                value={discountAmount.toFixed(2)} \r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Tax Rate (%)</span>\r\n              <Input\r\n                name=\"taxRate\"\r\n                value={formData.taxRate}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Tax Amount</span>\r\n              <Input \r\n                value={taxAmount.toFixed(2)} \r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span className=\"text-lg font-semibold\">Total Amount</span>\r\n              <Input \r\n                value={totalAmount.toFixed(2)} \r\n                className=\"mt-1 text-lg font-semibold\"\r\n                type=\"number\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Additional Info */}\r\n          <div className=\"grid grid-cols-1 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Terms & Conditions</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"terms\"\r\n                value={formData.terms}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                placeholder=\"Enter terms and conditions\"\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Notes</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"notes\"\r\n                value={formData.notes}\r\n                onChange={handleInputChange}\r\n                rows=\"2\"\r\n                placeholder=\"Enter any additional notes\"\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4 mt-6\">\r\n            <Button\r\n              type=\"button\"\r\n              layout=\"outline\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ backgroundColor: \"#AA1A21\" }}\r\n              className=\"text-white\"\r\n              disabled={loading || clientsList.length === 0 || productsList.length === 0}\r\n            >\r\n              {loading ? 'Updating...' : 'Update Quotation'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditQuotations","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\n\r\nfunction SectionTitle({ children }) {\r\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\r\n}\r\n\r\nexport default SectionTitle\r\n"],"sourceRoot":""}