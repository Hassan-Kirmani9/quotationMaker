{"version":3,"sources":["pages/Clients/EditClient.js","components/Typography/PageTitle.js"],"names":["EditClient","history","useHistory","id","useParams","formData","setFormData","useState","name","businessName","email","address","mobileNo","businessNo","city","country","errors","setErrors","apiError","setApiError","loading","setLoading","fetching","setFetching","useEffect","async","res","get","concat","success","c","data","err","console","error","fetchClient","handleChange","e","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","_Fragment","PageTitle","onSubmit","preventDefault","validate","newErrors","trim","test","Object","keys","length","put","push","message","map","_ref","field","label","Label","Input","onChange","valid","HelperText","Button","layout","onClick","handleCancel","type","style","backgroundColor","disabled"],"mappings":"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","file":"static/js/20.8d1814b2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { get, put } from '../../api/axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Input,\r\n  Label,\r\n  HelperText,\r\n\r\n} from '@windmill/react-ui'\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\n\r\nfunction EditClient() {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams()\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    businessName: '',\r\n    email: '',\r\n    address: '',\r\n    mobileNo: '',\r\n    businessNo: '',\r\n    city: '',\r\n    country: ''\r\n  })\r\n\r\n  const [errors, setErrors] = useState({})\r\n  const [apiError, setApiError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [fetching, setFetching] = useState(true)\r\n\r\n  \r\n  const fetchClient = async () => {\r\n    try {\r\n      const res = await get(`/clients/${id}`)\r\n      if (res.success) {\r\n        const c = res.data\r\n        setFormData({\r\n          name: c.name || '',\r\n          businessName: c.businessName || '',\r\n          email: c.email || '',\r\n\r\n          address: c.address || '',\r\n          mobileNo: c.mobileNo || '',\r\n          businessNo: c.businessNo || '',\r\n          city: c.city || '',\r\n          country: c.country || ''\r\n        })\r\n      } else {\r\n        setApiError('Client not found')\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      setApiError('Failed to fetch client')\r\n    } finally {\r\n      setFetching(false)\r\n    }\r\n  }\r\n  const handleCancel = () => {\r\n    history.push('/app/clients')\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchClient()\r\n  }, [id])\r\n\r\n  const validate = () => {\r\n    const newErrors = {}\r\n    if (!formData.name.trim()) newErrors.name = 'Name is required'\r\n    if (!formData.businessName.trim()) newErrors.businessName = 'Business Name is required'\r\n    if (!formData.email.trim()) newErrors.email = 'Email Address is required'\r\n\r\n    if (!formData.address.trim()) newErrors.address = 'Address is required'\r\n    if (!formData.mobileNo.trim()) newErrors.mobileNo = 'Mobile No is required'\r\n    else if (!/^[\\+]?[0-9\\-\\s\\(\\)]{10,}$/.test(formData.mobileNo)) newErrors.mobileNo = 'Invalid Mobile No'\r\n\r\n    if (formData.businessNo && !/^[\\+]?[0-9\\-\\s\\(\\)]{10,}$/.test(formData.businessNo)) {\r\n      newErrors.businessNo = 'Invalid Business No'\r\n    }\r\n\r\n    if (!formData.city.trim()) newErrors.city = 'City is required'\r\n    if (!formData.country.trim()) newErrors.country = 'Country is required'\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({ ...prev, [name]: value }))\r\n\r\n    if (errors[name]) setErrors(prev => ({ ...prev, [name]: '' }))\r\n    if (apiError) setApiError('')\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    if (!validate()) return\r\n\r\n    setLoading(true)\r\n    try {\r\n      const res = await put(`/clients/${id}`, formData,{\r\n        \r\n      })\r\n      if (res.success) {\r\n        history.push('/app/clients')\r\n      } else {\r\n        setApiError('Failed to update client')\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      setApiError(err.message || 'Something went wrong')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (fetching) {\r\n    return <div className=\"text-center py-20\">Loading client data...</div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Edit Client</PageTitle>\r\n\r\n      {apiError && <div className=\"text-red-500 mb-4\">{apiError}</div>}\r\n\r\n      <form onSubmit={handleSubmit} className=\"grid gap-6 md:grid-cols-2\">\r\n        {[\r\n          ['name', 'Name *'],\r\n          ['businessName', 'Business Name *'],\r\n          ['email', 'Email Address *'],\r\n          ['address', 'Address *'],\r\n          ['mobileNo', 'Mobile No *'],\r\n          ['businessNo', 'Business No'],\r\n          ['city', 'City *'],\r\n          ['country', 'Country *']\r\n        ].map(([field, label]) => (\r\n          <Label key={field}>\r\n            <span>{label}</span>\r\n            <Input\r\n              className=\"mt-1\"\r\n              name={field}\r\n              value={formData[field]}\r\n              onChange={handleChange}\r\n              valid={!errors[field]}\r\n            />\r\n            {errors[field] && <HelperText valid={false}>{errors[field]}</HelperText>}\r\n          </Label>\r\n        ))}\r\n\r\n        <div className=\"md:col-span-2 flex justify-end gap-4\">\r\n          <Button layout=\"outline\" onClick={handleCancel}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button type=\"submit\" style={{ backgroundColor: '#AA1A21' }} className=\"text-white\" disabled={loading}>\r\n            {loading ? 'Updating...' : 'Update Client'}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditClient\r\n","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}