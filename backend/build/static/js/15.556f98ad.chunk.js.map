{"version":3,"sources":["pages/Quotations/CreateQuotations.js","components/Typography/PageTitle.js","components/Typography/SectionTitle.js"],"names":["CreateQuotations","history","useHistory","currency","formatCurrency","getCurrencySymbol","useCurrency","formData","setFormData","useState","client","title","description","discountType","discountValue","taxRate","notes","terms","quotationItems","setQuotationItems","product","quantity","unitPrice","totalPrice","loading","setLoading","errors","setErrors","apiError","setApiError","clientsList","setClientsList","productsList","setProductsList","dataLoading","setDataLoading","subtotal","setSubtotal","discountAmount","setDiscountAmount","taxAmount","setTaxAmount","totalAmount","setTotalAmount","useEffect","async","clientsResponse","productsResponse","currenciesResponse","Promise","all","get","success","data","clients","products","error","console","fetchDropdownData","newSubtotal","reduce","sum","item","parseFloat","newDiscountAmount","afterDiscount","newTaxAmount","handleInputChange","e","name","value","target","prev","_objectSpread","handleItemChange","index","field","items","selectedProduct","find","p","_id","sellingPrice","_jsx","className","children","_jsxs","_Fragment","PageTitle","onSubmit","preventDefault","validateForm","newErrors","trim","forEach","concat","Object","keys","length","quotationData","map","response","post","alert","push","message","_error$response","_error$response$data","Label","Select","onChange","required","valid","businessName","HelperText","Input","readOnly","disabled","placeholder","Textarea","rows","SectionTitle","type","step","min","Button","layout","onClick","updatedItems","filter","_","i","removeQuotationItem","addQuotationItem","max","toFixed","handleCancel","window","confirm","style","backgroundColor","_ref"],"mappings":"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","file":"static/js/15.556f98ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { post, get } from '../../api/axios'\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport SectionTitle from '../../components/Typography/SectionTitle'\r\nimport { Input, Label, Button, Select, Textarea, HelperText } from '@windmill/react-ui'\r\nimport { useCurrency } from '../../context/CurrencyContext'\r\n\r\nfunction CreateQuotations() {\r\n  const history = useHistory()\r\n  const { currency, formatCurrency, getCurrencySymbol } = useCurrency()\r\n  const [formData, setFormData] = useState({\r\n    client: '',\r\n    title: '',\r\n    description: '',\r\n    discountType: 'percentage',\r\n    discountValue: 0,\r\n    taxRate: 0,\r\n    currency: '',\r\n    notes: '',\r\n    terms: ''\r\n  })\r\n\r\n  const [quotationItems, setQuotationItems] = useState([\r\n    {\r\n      product: '',\r\n      description: '',\r\n      quantity: 1,\r\n      unitPrice: 0,\r\n      totalPrice: 0\r\n    }\r\n  ])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [errors, setErrors] = useState({})\r\n  const [apiError, setApiError] = useState('')\r\n  const [clientsList, setClientsList] = useState([])\r\n  const [productsList, setProductsList] = useState([])\r\n  const [dataLoading, setDataLoading] = useState(true)\r\n\r\n  // Calculated values\r\n  const [subtotal, setSubtotal] = useState(0)\r\n  const [discountAmount, setDiscountAmount] = useState(0)\r\n  const [taxAmount, setTaxAmount] = useState(0)\r\n  const [totalAmount, setTotalAmount] = useState(0)\r\n\r\n  // Fetch dropdown data\r\n  const fetchDropdownData = async () => {\r\n    try {\r\n      setDataLoading(true)\r\n\r\n      const [clientsResponse, productsResponse, currenciesResponse] = await Promise.all([\r\n        get(\"/clients\"),\r\n        get(\"/products\"),\r\n      ])\r\n\r\n      if (clientsResponse.success) {\r\n        setClientsList(clientsResponse.data.clients || [])\r\n      }\r\n\r\n      if (productsResponse.success) {\r\n        setProductsList(productsResponse.data.products || [])\r\n      }\r\n\r\n\r\n\r\n    } catch (error) {\r\n      console.error('Error fetching dropdown data:', error)\r\n    } finally {\r\n      setDataLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDropdownData()\r\n  }, [])\r\n\r\n  // Calculate totals whenever items or discounts change\r\n  useEffect(() => {\r\n    const newSubtotal = quotationItems.reduce((sum, item) => sum + (parseFloat(item.totalPrice) || 0), 0)\r\n    setSubtotal(newSubtotal)\r\n\r\n    const newDiscountAmount = formData.discountType === 'percentage'\r\n      ? (newSubtotal * formData.discountValue) / 100\r\n      : formData.discountValue\r\n\r\n    setDiscountAmount(newDiscountAmount)\r\n\r\n    const afterDiscount = newSubtotal - newDiscountAmount\r\n    const newTaxAmount = (afterDiscount * formData.taxRate) / 100\r\n    setTaxAmount(newTaxAmount)\r\n\r\n    const newTotalAmount = afterDiscount + newTaxAmount\r\n    setTotalAmount(newTotalAmount)\r\n  }, [quotationItems, formData.discountType, formData.discountValue, formData.taxRate])\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: name === 'discountValue' || name === 'taxRate' ? parseFloat(value) || 0 : value\r\n    }))\r\n\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }))\r\n    }\r\n\r\n    if (apiError) {\r\n      setApiError('')\r\n    }\r\n  }\r\n\r\n  // Handle item changes\r\n  const handleItemChange = (index, field, value) => {\r\n    const items = [...quotationItems]\r\n    items[index][field] = value\r\n\r\n    // If product is selected, auto-fill price and description\r\n    if (field === 'product' && value) {\r\n      const selectedProduct = productsList.find(p => p._id === value)\r\n      if (selectedProduct) {\r\n        items[index].unitPrice = selectedProduct.sellingPrice\r\n        items[index].description = selectedProduct.description\r\n      }\r\n    }\r\n\r\n    // Calculate total price for this item\r\n    if (field === 'quantity' || field === 'unitPrice' || field === 'product') {\r\n      const quantity = parseFloat(items[index].quantity) || 0\r\n      const unitPrice = parseFloat(items[index].unitPrice) || 0\r\n      items[index].totalPrice = quantity * unitPrice\r\n    }\r\n\r\n    setQuotationItems(items)\r\n  }\r\n\r\n  const addQuotationItem = () => {\r\n    setQuotationItems([...quotationItems, {\r\n      product: '',\r\n      description: '',\r\n      quantity: 1,\r\n      unitPrice: 0,\r\n      totalPrice: 0\r\n    }])\r\n  }\r\n\r\n  const removeQuotationItem = (index) => {\r\n    if (quotationItems.length > 1) {\r\n      const updatedItems = quotationItems.filter((_, i) => i !== index)\r\n      setQuotationItems(updatedItems)\r\n    }\r\n  }\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {}\r\n\r\n    if (!formData.client.trim()) {\r\n      newErrors.client = 'Client is required'\r\n    }\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required'\r\n    }\r\n\r\n    // Validate items\r\n    quotationItems.forEach((item, index) => {\r\n      if (!item.product) {\r\n        newErrors[`item_${index}_product`] = 'Product is required'\r\n      }\r\n      if (!item.quantity || parseFloat(item.quantity) <= 0) {\r\n        newErrors[`item_${index}_quantity`] = 'Quantity must be greater than 0'\r\n      }\r\n      if (!item.unitPrice || parseFloat(item.unitPrice) < 0) {\r\n        newErrors[`item_${index}_unitPrice`] = 'Unit price cannot be negative'\r\n      }\r\n    })\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setLoading(true)\r\n    setApiError('')\r\n\r\n    try {\r\n      const quotationData = {\r\n        ...formData,\r\n        items: quotationItems.map(item => ({\r\n          product: item.product,\r\n          description: item.description,\r\n          quantity: parseFloat(item.quantity),\r\n          unitPrice: parseFloat(item.unitPrice)\r\n        }))\r\n      }\r\n\r\n      const response = await post(\"/quotations\", quotationData)\r\n\r\n      if (response.success) {\r\n        alert('Quotation created successfully!')\r\n        history.push('/app/quotations')\r\n      } else {\r\n        setApiError(response.message || 'Failed to create quotation. Please try again.')\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating quotation:', error)\r\n\r\n      if (error.response?.data?.message) {\r\n        setApiError(error.response.data.message)\r\n      } else if (error.message) {\r\n        setApiError(error.message)\r\n      } else {\r\n        setApiError('Failed to create quotation. Please check your connection and try again.')\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    if (window.confirm('Are you sure you want to cancel? All entered data will be lost.')) {\r\n      history.push('/app/quotations')\r\n    }\r\n  }\r\n\r\n  if (dataLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading form data...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <PageTitle>Create New Quotation</PageTitle>\r\n      </div>\r\n\r\n      <div className=\"px-4 py-3 mb-8 bg-white rounded-lg shadow-md dark:bg-gray-800\">\r\n        <form onSubmit={handleSubmit}>\r\n          {apiError && (\r\n            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n              {apiError}\r\n            </div>\r\n          )}\r\n\r\n          {/* Basic Info */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Client *</span>\r\n              <Select\r\n                className=\"mt-1\"\r\n                name=\"client\"\r\n                value={formData.client}\r\n                onChange={handleInputChange}\r\n                required\r\n                valid={!errors.client}\r\n              >\r\n                <option value=\"\">Select Client</option>\r\n                {clientsList.map((client) => (\r\n                  <option key={client._id} value={client._id}>\r\n                    {client.name} - {client.businessName}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n              {errors.client && <HelperText valid={false}>{errors.client}</HelperText>}\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Currency</span>\r\n              <Input\r\n                className=\"mt-1\"\r\n                value={`${currency} - Will use default currency from configuration`}\r\n                readOnly\r\n                disabled\r\n              />\r\n              <HelperText>Currency is set in Configuration settings</HelperText>\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Title *</span>\r\n              <Input\r\n                className=\"mt-1\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Enter quotation title\"\r\n                required\r\n                valid={!errors.title}\r\n              />\r\n              {errors.title && (\r\n                <HelperText valid={false}>{errors.title}</HelperText>\r\n              )}\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span>Description</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                placeholder=\"Enter quotation description\"\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Quotation Items */}\r\n          <SectionTitle>Quotation Items</SectionTitle>\r\n          <div className=\"mb-6\">\r\n            {quotationItems.map((item, index) => (\r\n              <div key={index} className=\"grid grid-cols-1 md:grid-cols-6 gap-4 mb-4 p-4 border rounded-lg\">\r\n                <Label className=\"md:col-span-2\">\r\n                  <span>Product *</span>\r\n                  <Select\r\n                    className=\"mt-1\"\r\n                    value={item.product}\r\n                    onChange={(e) => handleItemChange(index, 'product', e.target.value)}\r\n                    required\r\n                    valid={!errors[`item_${index}_product`]}\r\n                  >\r\n                    <option value=\"\">Select Product</option>\r\n                    {productsList.map((product) => (\r\n                      <option key={product._id} value={product._id}>\r\n                        {product.name}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                  {errors[`item_${index}_product`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_product`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Quantity *</span>\r\n                  <Input\r\n                    className=\"mt-1\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    value={item.quantity}\r\n                    onChange={(e) => handleItemChange(index, 'quantity', e.target.value)}\r\n                    placeholder=\"1\"\r\n                    required\r\n                    valid={!errors[`item_${index}_quantity`]}\r\n                  />\r\n                  {errors[`item_${index}_quantity`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_quantity`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Unit Price *</span>\r\n                  <Input\r\n                    className=\"mt-1\"\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    min=\"0\"\r\n                    value={item.unitPrice}\r\n                    onChange={(e) => handleItemChange(index, 'unitPrice', e.target.value)}\r\n                    placeholder=\"0.00\"\r\n                    required\r\n                    valid={!errors[`item_${index}_unitPrice`]}\r\n                  />\r\n                  {errors[`item_${index}_unitPrice`] && (\r\n                    <HelperText valid={false}>{errors[`item_${index}_unitPrice`]}</HelperText>\r\n                  )}\r\n                </Label>\r\n\r\n                <Label>\r\n                  <span>Total Price</span>\r\n                  <Input\r\n                    value={formatCurrency(item.totalPrice)}\r\n                    readOnly\r\n                  />\r\n                </Label>\r\n\r\n                <div className=\"flex items-end\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    layout=\"outline\"\r\n                    onClick={() => removeQuotationItem(index)}\r\n                    disabled={quotationItems.length === 1}\r\n                    className=\"w-full\"\r\n                  >\r\n                    Remove\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <Button\r\n              type=\"button\"\r\n              layout=\"outline\"\r\n              onClick={addQuotationItem}\r\n              className=\"mt-2\"\r\n            >\r\n              Add Item\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Pricing Summary */}\r\n          <SectionTitle>Pricing Details</SectionTitle>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Subtotal</span>\r\n              <Input\r\n                value={formatCurrency(subtotal)}\r\n                className=\"mt-1\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Type</span>\r\n              <Select\r\n                name=\"discountType\"\r\n                value={formData.discountType}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n              >\r\n                <option value=\"percentage\">Percentage</option>\r\n                <option value=\"fixed\">Fixed Amount</option>\r\n              </Select>\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Value</span>\r\n              <Input\r\n                name=\"discountValue\"\r\n                value={formData.discountValue}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                placeholder={formData.discountType === 'percentage' ? '0%' : '0.00'}\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Discount Amount</span>\r\n              <Input\r\n                value={formatCurrency(discountAmount)}\r\n                className=\"mt-1\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Tax Rate (%)</span>\r\n              <Input\r\n                name=\"taxRate\"\r\n                value={formData.taxRate}\r\n                onChange={handleInputChange}\r\n                className=\"mt-1\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Tax Amount</span>\r\n              <Input\r\n                value={formatCurrency(taxAmount)}\r\n                className=\"mt-1\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n\r\n            <Label className=\"md:col-span-2\">\r\n              <span className=\"text-lg font-semibold\">Total Amount</span>\r\n              <Input\r\n                value={totalAmount.toFixed(2)}\r\n                className=\"mt-1 text-lg font-semibold\"\r\n                type=\"number\"\r\n                readOnly\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          {/* Additional Info */}\r\n          <div className=\"grid grid-cols-1 gap-4 mb-6\">\r\n            <Label>\r\n              <span>Terms & Conditions</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"terms\"\r\n                value={formData.terms}\r\n                onChange={handleInputChange}\r\n                rows=\"3\"\r\n                placeholder=\"Enter terms and conditions\"\r\n              />\r\n            </Label>\r\n\r\n            <Label>\r\n              <span>Notes</span>\r\n              <Textarea\r\n                className=\"mt-1\"\r\n                name=\"notes\"\r\n                value={formData.notes}\r\n                onChange={handleInputChange}\r\n                rows=\"2\"\r\n                placeholder=\"Enter any additional notes\"\r\n              />\r\n            </Label>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end space-x-4 mt-6\">\r\n            <Button\r\n              type=\"button\"\r\n              layout=\"outline\"\r\n              onClick={handleCancel}\r\n              disabled={loading}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ backgroundColor: \"#AA1A21\" }}\r\n              className=\"text-white\"\r\n              disabled={loading || clientsList.length === 0 || productsList.length === 0}\r\n            >\r\n              {loading ? 'Creating...' : 'Create Quotation'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateQuotations","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n","import React from 'react'\r\n\r\nfunction SectionTitle({ children }) {\r\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\r\n}\r\n\r\nexport default SectionTitle\r\n"],"sourceRoot":""}