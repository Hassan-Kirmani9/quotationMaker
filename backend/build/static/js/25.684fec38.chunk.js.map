{"version":3,"sources":["pages/Products/Products.js","components/Typography/PageTitle.js"],"names":["Products","history","useHistory","formatCurrency","currency","useCurrency","pageTable","setPageTable","useState","dataTable","setDataTable","loading","setLoading","error","setError","totalResults","setTotalResults","totalPages","setTotalPages","searchTerm","setSearchTerm","sizes","setSizes","loadingSizes","setLoadingSizes","isModalOpen","setIsModalOpen","editingProduct","setEditingProduct","editFormData","setEditFormData","name","description","sellingPrice","purchasePrice","size","editLoading","setEditLoading","editErrors","setEditErrors","editApiError","setEditApiError","fetchProducts","async","page","arguments","length","undefined","search","params","URLSearchParams","toString","limit","append","response","get","concat","success","data","products","pagination","total","pages","message","_error$response","_error$response$data","console","handleDelete","id","productName","window","confirm","_delete","alert","_error$response2","_error$response2$data","handleEdit","product","_id","fetchSizes","handleEditInputChange","e","value","target","prev","_objectSpread","parseFloat","handleEditSubmit","preventDefault","validateEditForm","newErrors","trim","Object","keys","put","closeModal","_error$response3","_error$response3$data","onPageChange","p","useEffect","_jsx","className","children","_jsxs","Button","onClick","style","backgroundColor","_Fragment","PageTitle","push","Input","placeholder","onChange","timeoutId","setTimeout","clearTimeout","layout","TableContainer","Table","TableHeader","TableCell","TableBody","map","_product$size","TableRow","EditIcon","TrashIcon","TableFooter","Pagination","resultsPerPage","label","_product$size2","IoPencil","IoTrash","IoResize","IoDocument","IoPricetagsOutline","IoPricetag","Modal","isOpen","onClose","ModalHeader","ModalBody","onSubmit","Label","required","valid","HelperText","rows","Select","type","step","min","ModalFooter","disabled","block","_ref"],"mappings":"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","file":"static/js/25.684fec38.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { get, _delete, put } from '../../api/axios'\r\n\r\nimport PageTitle from '../../components/Typography/PageTitle'\r\nimport {\r\n    Table,\r\n    TableHeader,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TableFooter,\r\n    TableContainer,\r\n    Button,\r\n    Pagination,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Input,\r\n    Label,\r\n    HelperText,\r\n    Select\r\n} from '@windmill/react-ui'\r\nimport { EditIcon, TrashIcon } from '../../icons'\r\nimport { useCurrency } from '../../context/CurrencyContext'\r\nimport {\r\n    IoCart,\r\n    IoDocument,\r\n    IoPricetag,\r\n    IoPricetagsOutline,\r\n    IoPencil,\r\n    IoTrash,\r\n    IoResize\r\n} from 'react-icons/io5'\r\n\r\nfunction Products() {\r\n    const history = useHistory()\r\n    const { formatCurrency, currency } = useCurrency()\r\n\r\n    const [pageTable, setPageTable] = useState(1)\r\n    const [dataTable, setDataTable] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n\r\n    const resultsPerPage = 10\r\n    const [totalResults, setTotalResults] = useState(0)\r\n    const [totalPages, setTotalPages] = useState(0)\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const [sizes, setSizes] = useState([])\r\n    const [loadingSizes, setLoadingSizes] = useState(false)\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [editingProduct, setEditingProduct] = useState(null)\r\n    const [editFormData, setEditFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        sellingPrice: 0,\r\n        purchasePrice: 0,\r\n        size: ''\r\n    })\r\n    const [editLoading, setEditLoading] = useState(false)\r\n    const [editErrors, setEditErrors] = useState({})\r\n    const [editApiError, setEditApiError] = useState('')\r\n\r\n    const fetchSizes = async () => {\r\n        try {\r\n            setLoadingSizes(true)\r\n            const response = await get('/sizes/all')\r\n            if (response.success) {\r\n                setSizes(response.data.sizes)\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching sizes:', error)\r\n        } finally {\r\n            setLoadingSizes(false)\r\n        }\r\n    }\r\n\r\n    const fetchProducts = async (page = 1, search = '') => {\r\n        try {\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            const params = new URLSearchParams({\r\n                page: page.toString(),\r\n                limit: resultsPerPage.toString()\r\n            })\r\n\r\n            if (search) params.append('search', search)\r\n\r\n            const response = await get(`/products?${params.toString()}`)\r\n\r\n            if (response.success) {\r\n                setDataTable(response.data.products)\r\n                setTotalResults(response.data.pagination.total)\r\n                setTotalPages(response.data.pagination.pages)\r\n            } else {\r\n                setError(response.message || 'Failed to fetch products')\r\n            }\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || error.message || 'Failed to fetch products')\r\n            console.error('Error fetching products:', error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        const value = e.target.value\r\n        setSearchTerm(value)\r\n        setPageTable(1)\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            fetchProducts(1, value)\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timeoutId)\r\n    }\r\n\r\n    const handleDelete = async (id, productName) => {\r\n        if (window.confirm(`Are you sure you want to delete ${productName}? This action cannot be undone.`)) {\r\n            try {\r\n                const response = await _delete(`/products/${id}`)\r\n\r\n                if (response.success) {\r\n                    fetchProducts(pageTable, searchTerm)\r\n                    alert('Product deleted successfully')\r\n                } else {\r\n                    alert(response.message || 'Failed to delete product')\r\n                }\r\n            } catch (error) {\r\n                alert(error.response?.data?.message || error.message || 'Failed to delete product')\r\n                console.error('Error deleting product:', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (product) => {\r\n        setEditingProduct(product)\r\n        setEditFormData({\r\n            name: product.name,\r\n            description: product.description || '',\r\n            sellingPrice: product.sellingPrice,\r\n            purchasePrice: product.purchasePrice,\r\n            size: product.size._id || product.size\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n        setIsModalOpen(true)\r\n        \r\n        if (sizes.length === 0) {\r\n            fetchSizes()\r\n        }\r\n    }\r\n\r\n    const handleEditInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setEditFormData(prev => ({\r\n            ...prev,\r\n            [name]: name === 'sellingPrice' || name === 'purchasePrice' ? parseFloat(value) || 0 : value\r\n        }))\r\n\r\n        if (editErrors[name]) {\r\n            setEditErrors(prev => ({\r\n                ...prev,\r\n                [name]: ''\r\n            }))\r\n        }\r\n\r\n        if (editApiError) {\r\n            setEditApiError('')\r\n        }\r\n    }\r\n\r\n    const validateEditForm = () => {\r\n        const newErrors = {}\r\n\r\n        if (!editFormData.name.trim()) {\r\n            newErrors.name = 'Product name is required'\r\n        }\r\n\r\n        if (!editFormData.size) {\r\n            newErrors.size = 'Size is required'\r\n        }\r\n\r\n        if (!editFormData.sellingPrice || editFormData.sellingPrice < 0) {\r\n            newErrors.sellingPrice = 'Selling price must be 0 or greater'\r\n        }\r\n\r\n        if (!editFormData.purchasePrice || editFormData.purchasePrice < 0) {\r\n            newErrors.purchasePrice = 'Purchase price must be 0 or greater'\r\n        }\r\n\r\n        setEditErrors(newErrors)\r\n        return Object.keys(newErrors).length === 0\r\n    }\r\n\r\n    const handleEditSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!validateEditForm()) {\r\n            return\r\n        }\r\n\r\n        setEditLoading(true)\r\n        setEditApiError('')\r\n\r\n        try {\r\n            const response = await put(`/products/${editingProduct._id}`, editFormData)\r\n\r\n            if (response.success) {\r\n                alert('Product updated successfully!')\r\n                closeModal()\r\n                fetchProducts(pageTable, searchTerm)\r\n            } else {\r\n                setEditApiError(response.message || 'Failed to update product. Please try again.')\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating product:', error)\r\n\r\n            if (error.response?.data?.message) {\r\n                setEditApiError(error.response.data.message)\r\n            } else if (error.message) {\r\n                setEditApiError(error.message)\r\n            } else {\r\n                setEditApiError('Failed to update product. Please check your connection and try again.')\r\n            }\r\n        } finally {\r\n            setEditLoading(false)\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false)\r\n        setEditingProduct(null)\r\n        setEditFormData({\r\n            name: '',\r\n            description: '',\r\n            sellingPrice: 0,\r\n            purchasePrice: 0,\r\n            size: ''\r\n        })\r\n        setEditErrors({})\r\n        setEditApiError('')\r\n    }\r\n\r\n    const onPageChange = (p) => {\r\n        setPageTable(p)\r\n        fetchProducts(p, searchTerm)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProducts(1, '')\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-purple-600\"></div>\r\n                    <p className=\"mt-4 text-gray-600\">Loading products...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-screen\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"text-red-500 text-xl mb-4\">{error}</div>\r\n                    <Button\r\n                        onClick={() => fetchProducts(1, '')}\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n                <PageTitle>Products</PageTitle>\r\n                <Button\r\n                    style={{ backgroundColor: \"#AA1A21\" }}\r\n                    className=\"text-white\"\r\n                    onClick={() => history.push('/app/products/create')}\r\n                >\r\n                    Add Product\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Search */}\r\n            <div className=\"mb-4\">\r\n                <Input\r\n                    placeholder=\"Search products by name or description...\"\r\n                    value={searchTerm}\r\n                    onChange={handleSearch}\r\n                    className=\"w-full md:w-1/3\"\r\n                />\r\n            </div>\r\n\r\n            {dataTable.length === 0 && !searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No products found</p>\r\n                    <Button\r\n                        style={{ backgroundColor: \"#AA1A21\" }}\r\n                        className=\"text-white\"\r\n                        onClick={() => history.push('/app/products/create')}\r\n                    >\r\n                        Create Your First Product\r\n                    </Button>\r\n                </div>\r\n            ) : dataTable.length === 0 && searchTerm ? (\r\n                <div className=\"text-center py-12\">\r\n                    <p className=\"text-gray-600 text-lg mb-4\">No products found for \"{searchTerm}\"</p>\r\n                    <Button\r\n                        layout=\"outline\"\r\n                        onClick={() => {\r\n                            setSearchTerm('')\r\n                            fetchProducts(1, '')\r\n                        }}\r\n                    >\r\n                        Clear Search\r\n                    </Button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    {/* Desktop Table View */}\r\n                    <div className=\"hidden md:block\">\r\n                        <TableContainer className=\"mb-8\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <tr>\r\n                                        <TableCell>Product Name</TableCell>\r\n                                        <TableCell>Size</TableCell>\r\n                                        <TableCell>Description</TableCell>\r\n                                        <TableCell>Purchase Price</TableCell>\r\n                                        <TableCell>Selling Price</TableCell>\r\n                                        <TableCell>Actions</TableCell>\r\n                                    </tr>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {dataTable.map((product) => (\r\n                                        <TableRow key={product._id}>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center text-sm\">\r\n                                                    <div>\r\n                                                        <p className=\"font-semibold\">{product.name}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"inline-flex items-center px-3 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\r\n                                                    {product.size?.name || 'N/A'}\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{product.description || 'No description'}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm\">{formatCurrency(product.purchasePrice)}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"text-sm font-semibold\">{formatCurrency(product.sellingPrice)}</span>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <div className=\"flex items-center space-x-4\">\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Edit\"\r\n                                                        onClick={() => handleEdit(product)}\r\n                                                    >\r\n                                                        <EditIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n\r\n                                                    <Button\r\n                                                        layout=\"link\"\r\n                                                        size=\"icon\"\r\n                                                        aria-label=\"Delete\"\r\n                                                        onClick={() => handleDelete(product._id, product.name)}\r\n                                                    >\r\n                                                        <TrashIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            {totalPages > 1 && (\r\n                                <TableFooter>\r\n                                    <Pagination\r\n                                        totalResults={totalResults}\r\n                                        resultsPerPage={resultsPerPage}\r\n                                        onChange={onPageChange}\r\n                                        label=\"Table navigation\"\r\n                                    />\r\n                                </TableFooter>\r\n                            )}\r\n                        </TableContainer>\r\n                    </div>\r\n\r\n                    {/* Mobile Card View */}\r\n                    <div className=\"block md:hidden\">\r\n                        <div className=\"space-y-4 mb-8\">\r\n                            {dataTable.map((product) => (\r\n                                <div\r\n                                    key={product._id}\r\n                                    className=\"bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl p-4 shadow-sm border border-purple-200 relative\"\r\n                                >\r\n                                    {/* Header */}\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <h3 className=\"text-gray-800 font-semibold text-lg leading-tight flex-1 pr-4\">\r\n                                            {product.name}\r\n                                        </h3>\r\n                                        <div className=\"flex space-x-2 flex-shrink-0\">\r\n                                            <button\r\n                                                onClick={() => handleEdit(product)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Edit\"\r\n                                            >\r\n                                                <IoPencil className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => handleDelete(product._id, product.name)}\r\n                                                className=\"bg-white border border-gray-300 rounded-lg p-2 hover:bg-gray-50 transition-colors\"\r\n                                                aria-label=\"Delete\"\r\n                                            >\r\n                                                <IoTrash className=\"w-4 h-4 text-gray-600\" />\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Size */}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoResize className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\r\n                                            {product.size?.name || 'No size'}\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    {/* Description */}\r\n                                    {product.description && (\r\n                                        <div className=\"flex items-start mb-4 text-gray-600\">\r\n                                            <IoDocument className=\"w-4 h-4 mr-2 flex-shrink-0 mt-0.5\" />\r\n                                            <span className=\"text-sm\">\r\n                                                {product.description}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {/* Purchase Price */}\r\n                                    <div className=\"flex items-center mb-3 text-gray-600\">\r\n                                        <IoPricetagsOutline className=\"w-4 h-4 mr-2 flex-shrink-0\" />\r\n                                        <div className=\"text-sm\">\r\n                                            <span className=\"text-gray-500\">Purchase Price: </span>\r\n                                            <span className=\"font-medium\">{formatCurrency(product.purchasePrice)}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {/* Selling Price */}\r\n                                    <div className=\"flex items-center\">\r\n                                        <IoPricetag className=\"w-5 h-5 mr-3 text-purple-600\" />\r\n                                        <div>\r\n                                            <div className=\"text-xs text-gray-500 uppercase tracking-wide\">Selling Price</div>\r\n                                            <div className=\"text-2xl font-bold text-purple-700\">\r\n                                                {formatCurrency(product.sellingPrice)}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Mobile Pagination */}\r\n                        {totalPages > 1 && (\r\n                            <div className=\"flex justify-center\">\r\n                                <Pagination\r\n                                    totalResults={totalResults}\r\n                                    resultsPerPage={resultsPerPage}\r\n                                    onChange={onPageChange}\r\n                                    label=\"Table navigation\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            {/* Edit Product Modal */}\r\n            <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n                <ModalHeader>Edit Product</ModalHeader>\r\n                <ModalBody className=\"max-h-[60vh] sm:max-h-[70vh] overflow-y-auto\">\r\n                    <form onSubmit={handleEditSubmit}>\r\n                        {editApiError && (\r\n                            <div className=\"mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded\">\r\n                                {editApiError}\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"grid grid-cols-1 gap-4\">\r\n                            <Label>\r\n                                <span>Product Name *</span>\r\n                                <Input\r\n                                    className=\"mt-1\"\r\n                                    name=\"name\"\r\n                                    value={editFormData.name}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter product name\"\r\n                                    required\r\n                                    valid={!editErrors.name}\r\n                                />\r\n                                {editErrors.name && (\r\n                                    <HelperText valid={false}>{editErrors.name}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Description</span>\r\n                                <textarea\r\n                                    className=\"mt-1 block w-full pt-2 pl-2 border-2 border-gray-300 rounded-md shadow-sm focus:border-purple-300 focus:ring focus:ring-purple-200 focus:ring-opacity-50 dark:border-gray-600 dark:bg-gray-700 dark:text-white\"\r\n                                    name=\"description\"\r\n                                    value={editFormData.description}\r\n                                    onChange={handleEditInputChange}\r\n                                    rows=\"3\"\r\n                                    placeholder=\"Enter product description\"\r\n                                />\r\n                            </Label>\r\n\r\n                            <Label>\r\n                                <span>Size *</span>\r\n                                {loadingSizes ? (\r\n                                    <div className=\"mt-1 p-2 text-gray-500\">Loading sizes...</div>\r\n                                ) : (\r\n                                    <Select\r\n                                        className=\"mt-1\"\r\n                                        name=\"size\"\r\n                                        value={editFormData.size}\r\n                                        onChange={handleEditInputChange}\r\n                                        required\r\n                                        valid={!editErrors.size}\r\n                                    >\r\n                                        <option value=\"\">Select a size</option>\r\n                                        {sizes.map((size) => (\r\n                                            <option key={size._id} value={size._id}>\r\n                                                {size.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Select>\r\n                                )}\r\n                                {editErrors.size && (\r\n                                    <HelperText valid={false}>{editErrors.size}</HelperText>\r\n                                )}\r\n                            </Label>\r\n\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                                <Label>\r\n                                    <span>Purchase Price *</span>\r\n                                    <Input\r\n                                        className=\"mt-1\"\r\n                                        name=\"purchasePrice\"\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        min=\"0\"\r\n                                        value={editFormData.purchasePrice}\r\n                                        onChange={handleEditInputChange}\r\n                                        placeholder=\"0.00\"\r\n                                        required\r\n                                        valid={!editErrors.purchasePrice}\r\n                                    />\r\n                                    {editErrors.purchasePrice && (\r\n                                        <HelperText valid={false}>{editErrors.purchasePrice}</HelperText>\r\n                                    )}\r\n                                </Label>\r\n\r\n                                <Label>\r\n                                    <span>Selling Price *</span>\r\n                                    <Input\r\n                                        className=\"mt-1\"\r\n                                        name=\"sellingPrice\"\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        min=\"0\"\r\n                                        value={editFormData.sellingPrice}\r\n                                        onChange={handleEditInputChange}\r\n                                        placeholder=\"0.00\"\r\n                                        required\r\n                                        valid={!editErrors.sellingPrice}\r\n                                    />\r\n                                    {editErrors.sellingPrice && (\r\n                                        <HelperText valid={false}>{editErrors.sellingPrice}</HelperText>\r\n                                    )}\r\n                                </Label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter className=\"flex-shrink-0\">\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button layout=\"outline\" onClick={closeModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"hidden sm:block\">\r\n                        <Button\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Product'}\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button block size=\"large\" layout=\"outline\" onClick={closeModal} disabled={editLoading}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"block w-full sm:hidden\">\r\n                        <Button\r\n                            block\r\n                            size=\"large\"\r\n                            onClick={handleEditSubmit}\r\n                            style={{ backgroundColor: \"#AA1A21\" }}\r\n                            className=\"text-white\"\r\n                            disabled={editLoading}\r\n                        >\r\n                            {editLoading ? 'Updating...' : 'Update Product'}\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Products","import React from 'react'\r\n\r\nfunction PageTitle({ children }) {\r\n  return (\r\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\r\n  )\r\n}\r\n\r\nexport default PageTitle\r\n"],"sourceRoot":""}